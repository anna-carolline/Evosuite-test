/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 23:10:42 GMT 2023
 */

package org.apache.commons.net.telnet;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.OutputStream;
import java.time.Duration;
import org.apache.commons.net.telnet.EchoOptionHandler;
import org.apache.commons.net.telnet.TelnetClient;
import org.apache.commons.net.telnet.TelnetClientTest;
import org.apache.commons.net.telnet.TelnetInputListener;
import org.apache.commons.net.telnet.TelnetOptionHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TelnetClient_ESTest extends TelnetClient_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient(512);
      EchoOptionHandler echoOptionHandler0 = new EchoOptionHandler();
      telnetClient0.addOptionHandler(echoOptionHandler0);
      telnetClient0.deleteOptionHandler(1);
      assertTrue(telnetClient0.getReaderThread());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient("", 0);
      assertTrue(telnetClient0.getReaderThread());
      
      telnetClient0.setReaderThread(false);
      boolean boolean0 = telnetClient0.getReaderThread();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient();
      // Undeclared exception!
      try { 
        telnetClient0.getRemoteOptionState(739);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 739
         //
         verifyException("org.apache.commons.net.telnet.Telnet", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient("", 0);
      // Undeclared exception!
      try { 
        telnetClient0.getLocalOptionState((-18));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -18
         //
         verifyException("org.apache.commons.net.telnet.Telnet", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient("");
      // Undeclared exception!
      try { 
        telnetClient0.deleteOptionHandler((-924));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -924
         //
         verifyException("org.apache.commons.net.telnet.Telnet", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient(512);
      EchoOptionHandler echoOptionHandler0 = new EchoOptionHandler();
      telnetClient0.addOptionHandler(echoOptionHandler0);
      try { 
        telnetClient0.addOptionHandler(echoOptionHandler0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Already registered option: 1
         //
         verifyException("org.apache.commons.net.telnet.Telnet", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient("", 141);
      // Undeclared exception!
      try { 
        telnetClient0.addOptionHandler((TelnetOptionHandler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.telnet.Telnet", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient(";[Yc;{7k9P}R X");
      // Undeclared exception!
      try { 
        telnetClient0._connectAction_();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.SocketClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient("AoV>o", 1556);
      int[] intArray0 = new int[0];
      try { 
        telnetClient0.sendSubnegotiation(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // zero length message
         //
         verifyException("org.apache.commons.net.telnet.TelnetClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient(1607);
      int[] intArray0 = new int[3];
      // Undeclared exception!
      try { 
        telnetClient0.sendSubnegotiation(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.telnet.Telnet", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient(512);
      TelnetInputListener telnetInputListener0 = mock(TelnetInputListener.class, new ViolatedAssumptionAnswer());
      telnetClient0.registerInputListener(telnetInputListener0);
      telnetClient0.notifyInputListener();
      assertTrue(telnetClient0.getReaderThread());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient("i:");
      telnetClient0.notifyInputListener();
      assertTrue(telnetClient0.getReaderThread());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient(1607);
      boolean boolean0 = telnetClient0.getRemoteOptionState(0);
      assertTrue(telnetClient0.getReaderThread());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient("1aj^~2V%", 512);
      boolean boolean0 = telnetClient0.getLocalOptionState(0);
      assertTrue(telnetClient0.getReaderThread());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient("VT100");
      try { 
        telnetClient0.flushOutputStream();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("org.apache.commons.net.telnet.TelnetClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient("i:");
      telnetClient0.disconnect();
      assertTrue(telnetClient0.getReaderThread());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient(512);
      telnetClient0.closeOutputStream();
      assertTrue(telnetClient0.getReaderThread());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient("i:");
      TelnetClientTest telnetClientTest0 = new TelnetClientTest();
      telnetClient0.registerNotifHandler(telnetClientTest0);
      assertTrue(telnetClient0.getReaderThread());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient("B@F");
      boolean boolean0 = telnetClient0.getReaderThread();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient("f");
      telnetClient0.setReaderThread(true);
      assertTrue(telnetClient0.getReaderThread());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient(836);
      // Undeclared exception!
      try { 
        telnetClient0.sendCommand((byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.telnet.Telnet", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient(512);
      telnetClient0.unregisterNotifHandler();
      assertTrue(telnetClient0.getReaderThread());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient(512);
      Duration duration0 = Duration.ofHours(512);
      // Undeclared exception!
      try { 
        telnetClient0.sendAYT(duration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.telnet.Telnet", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient(1607);
      telnetClient0.unregisterInputListener();
      assertTrue(telnetClient0.getReaderThread());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient("VT100");
      telnetClient0.getInputStream();
      assertTrue(telnetClient0.getReaderThread());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient();
      telnetClient0.getOutputStream();
      assertTrue(telnetClient0.getReaderThread());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient("");
      // Undeclared exception!
      try { 
        telnetClient0.sendAYT(0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.telnet.Telnet", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient("VT100");
      telnetClient0.registerSpyStream((OutputStream) null);
      assertTrue(telnetClient0.getReaderThread());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient(512);
      try { 
        telnetClient0.deleteOptionHandler(1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unregistered option: 1
         //
         verifyException("org.apache.commons.net.telnet.Telnet", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TelnetClient telnetClient0 = new TelnetClient(442);
      telnetClient0.stopSpyStream();
      assertTrue(telnetClient0.getReaderThread());
  }
}
