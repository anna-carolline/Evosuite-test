/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 22:49:35 GMT 2023
 */

package org.apache.commons.net.nntp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedReader;
import java.util.function.Consumer;
import org.apache.commons.net.nntp.ReplyIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReplyIterator_ESTest extends ReplyIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ReplyIterator replyIterator0 = new ReplyIterator((BufferedReader) null, true);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        replyIterator0.forEach(consumer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BufferedReader bufferedReader0 = mock(BufferedReader.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(bufferedReader0).readLine();
      ReplyIterator replyIterator0 = new ReplyIterator(bufferedReader0, false);
      replyIterator0.remove();
      // Undeclared exception!
      try { 
        replyIterator0.next();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.ReplyIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BufferedReader bufferedReader0 = mock(BufferedReader.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(bufferedReader0).readLine();
      ReplyIterator replyIterator0 = new ReplyIterator(bufferedReader0, false);
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      replyIterator0.forEachRemaining(consumer0);
      replyIterator0.forEach((Consumer<? super String>) null);
      replyIterator0.spliterator();
      // Undeclared exception!
      try { 
        replyIterator0.iterator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }
}
