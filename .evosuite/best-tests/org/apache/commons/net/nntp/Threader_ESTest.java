/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 22:20:54 GMT 2023
 */

package org.apache.commons.net.nntp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Iterator;
import java.util.List;
import org.apache.commons.net.nntp.Article;
import org.apache.commons.net.nntp.Threadable;
import org.apache.commons.net.nntp.Threader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Threader_ESTest extends Threader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Threader threader0 = new Threader();
      Iterator<Article> iterator0 = (Iterator<Article>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      Iterable<Article> iterable0 = (Iterable<Article>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      Iterable<Article> iterable1 = (Iterable<Article>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn((Iterator) null).when(iterable1).iterator();
      // Undeclared exception!
      try { 
        threader0.thread(iterable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Threader threader0 = new Threader();
      Iterator<Article> iterator0 = (Iterator<Article>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      Iterable<Article> iterable0 = (Iterable<Article>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(iterable0).iterator();
      threader0.thread(iterable0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Threader threader0 = new Threader();
      Iterator<Article> iterator0 = (Iterator<Article>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      Iterable<Article> iterable0 = (Iterable<Article>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(iterable0).iterator();
      threader0.thread(iterable0);
      Iterable<Article> iterable1 = (Iterable<Article>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn((Iterator) null).when(iterable1).iterator();
      // Undeclared exception!
      try { 
        threader0.thread(iterable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Threader threader0 = new Threader();
      Threadable[] threadableArray0 = new Threadable[3];
      // Undeclared exception!
      try { 
        threader0.thread(threadableArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.Threader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Threader threader0 = new Threader();
      Iterator<Article> iterator0 = (Iterator<Article>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      Iterable<Article> iterable0 = (Iterable<Article>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(iterable0).iterator();
      threader0.thread(iterable0);
      Threadable[] threadableArray0 = new Threadable[5];
      threadableArray0[0] = null;
      Iterable<Article> iterable1 = (Iterable<Article>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn((Iterator) null).when(iterable1).iterator();
      // Undeclared exception!
      try { 
        threader0.thread(iterable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Threader threader0 = new Threader();
      Threadable[] threadableArray0 = null;
      Iterable<Article> iterable0 = (Iterable<Article>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      Iterable<Article> iterable1 = (Iterable<Article>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn((Iterator) null).when(iterable1).iterator();
      threader0.thread((Threadable[]) null);
      // Undeclared exception!
      try { 
        threader0.thread(iterable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Threader threader0 = new Threader();
      Threadable[] threadableArray0 = null;
      threader0.thread((Threadable[]) null);
      threader0.thread((Threadable[]) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "jU*yOUOzql~RQ";
      stringArray0[1] = "jU*yOUOzql~RQ";
      stringArray0[2] = "jU*yOUOzql~RQ";
      Article article0 = mock(Article.class, new ViolatedAssumptionAnswer());
      doReturn(true, false, false, false, false).when(article0).isDummy();
      Iterator<Article> iterator0 = (Iterator<Article>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true, false, false, false, false).when(iterator0).hasNext();
      doReturn(article0, (Object) null, (Object) null, (Object) null, (Object) null).when(iterator0).next();
      Iterable<Article> iterable0 = (Iterable<Article>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(iterable0).iterator();
      // Undeclared exception!
      threader0.thread(iterable0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Threader threader0 = new Threader();
      Iterable<Article> iterable0 = null;
      threader0.thread((Iterable<? extends Threadable>) null);
      threader0.thread((Iterable<? extends Threadable>) null);
      threader0.thread((Iterable<? extends Threadable>) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = ".F;.n;hK$Kb";
      stringArray0[2] = "";
      Article article0 = mock(Article.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false, false, false).when(article0).isDummy();
      doReturn("", (String) null, (String) null, (String) null, (String) null).when(article0).messageThreadId();
      doReturn((Object) stringArray0, (Object) null, (Object) null, (Object) null, (Object) null).when(article0).messageThreadReferences();
      Iterator<Article> iterator0 = (Iterator<Article>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true, false, false, false, false).when(iterator0).hasNext();
      doReturn(article0, (Object) null, (Object) null, (Object) null, (Object) null).when(iterator0).next();
      Iterable<Article> iterable1 = (Iterable<Article>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(iterable1).iterator();
      // Undeclared exception!
      threader0.thread(iterable1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Threader threader0 = new Threader();
      boolean boolean0 = true;
      Iterable<Article> iterable0 = (Iterable<Article>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn((Iterator) null).when(iterable0).iterator();
      // Undeclared exception!
      try { 
        threader0.thread(iterable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.Threader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Threader threader0 = new Threader();
      threader0.thread((Iterable<? extends Threadable>) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Threader threader0 = new Threader();
      Threadable[] threadableArray0 = new Threadable[0];
      threader0.thread(threadableArray0);
      Iterable<Article> iterable0 = null;
      threader0.thread(threadableArray0);
      threader0.thread(threadableArray0);
      threader0.thread((Iterable<? extends Threadable>) null);
      threader0.thread(threadableArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      Article article0 = mock(Article.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false, false, false).when(article0).isDummy();
      doReturn("", (String) null, (String) null, (String) null, (String) null).when(article0).messageThreadId();
      doReturn((Object) stringArray0, (Object) null, (Object) null, (Object) null, (Object) null).when(article0).messageThreadReferences();
      Iterator<Article> iterator0 = (Iterator<Article>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true, false, false, false, false).when(iterator0).hasNext();
      doReturn(article0, (Object) null, (Object) null, (Object) null, (Object) null).when(iterator0).next();
      Iterable<Article> iterable1 = (Iterable<Article>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(iterable1).iterator();
      // Undeclared exception!
      threader0.thread(iterable1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Threader threader0 = new Threader();
      threader0.thread((Threadable[]) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Threader threader0 = new Threader();
      Iterable<Article> iterable0 = (Iterable<Article>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn((Iterator) null).when(iterable0).iterator();
      // Undeclared exception!
      try { 
        threader0.thread(iterable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.Threader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Threader threader0 = new Threader();
      Iterable<Article> iterable0 = null;
      threader0.thread((Iterable<? extends Threadable>) null);
      Threadable[] threadableArray0 = new Threadable[1];
      threadableArray0[0] = null;
      // Undeclared exception!
      try { 
        threader0.thread(threadableArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.Threader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Threader threader0 = new Threader();
      threader0.thread((List<? extends Threadable>) null);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Threader threader0 = new Threader();
      Iterable<Article> iterable0 = null;
      threader0.thread((Iterable<? extends Threadable>) null);
      threader0.thread((Iterable<? extends Threadable>) null);
      threader0.thread((Iterable<? extends Threadable>) null);
      Iterator<Article> iterator0 = (Iterator<Article>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(iterator0).hasNext();
      doReturn((Object) null).when(iterator0).next();
      Iterable<Article> iterable1 = (Iterable<Article>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(iterable1).iterator();
      // Undeclared exception!
      try { 
        threader0.thread(iterable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.Threader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Threader threader0 = new Threader();
      Threadable[] threadableArray0 = null;
      threader0.thread((Threadable[]) null);
      threader0.thread((Threadable[]) null);
      Article article0 = mock(Article.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(article0).isDummy();
      doReturn((String) null).when(article0).messageThreadId();
      doReturn((String[]) null).when(article0).messageThreadReferences();
      Iterator<Article> iterator0 = (Iterator<Article>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(iterator0).hasNext();
      doReturn(article0).when(iterator0).next();
      Iterable<Article> iterable0 = (Iterable<Article>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(iterable0).iterator();
      // Undeclared exception!
      try { 
        threader0.thread(iterable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
