/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 23:57:52 GMT 2023
 */

package org.apache.commons.net.nntp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Iterator;
import org.apache.commons.net.nntp.NewsgroupInfo;
import org.apache.commons.net.nntp.NewsgroupIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NewsgroupIterator_ESTest extends NewsgroupIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Iterator<String> iterator0 = (Iterator<String>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      Iterable<String> iterable0 = (Iterable<String>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(iterable0).iterator();
      NewsgroupIterator newsgroupIterator0 = new NewsgroupIterator(iterable0);
      newsgroupIterator0.remove();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Iterator<String> iterator0 = (Iterator<String>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn("dI(7~hwtqg|").when(iterator0).next();
      Iterable<String> iterable0 = (Iterable<String>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(iterable0).iterator();
      NewsgroupIterator newsgroupIterator0 = new NewsgroupIterator(iterable0);
      NewsgroupInfo newsgroupInfo0 = newsgroupIterator0.next();
      assertNull(newsgroupInfo0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Iterator<String> iterator0 = (Iterator<String>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false, true).when(iterator0).hasNext();
      Iterable<String> iterable0 = (Iterable<String>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(iterable0).iterator();
      NewsgroupIterator newsgroupIterator0 = new NewsgroupIterator(iterable0);
      boolean boolean0 = newsgroupIterator0.hasNext();
      boolean boolean1 = newsgroupIterator0.hasNext();
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NewsgroupIterator newsgroupIterator0 = null;
      try {
        newsgroupIterator0 = new NewsgroupIterator((Iterable<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.NewsgroupIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Iterator<String> iterator0 = (Iterator<String>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(iterator0).next();
      Iterable<String> iterable0 = (Iterable<String>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(iterable0).iterator();
      NewsgroupIterator newsgroupIterator0 = new NewsgroupIterator(iterable0);
      // Undeclared exception!
      try { 
        newsgroupIterator0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.NNTPClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Iterable<String> iterable0 = (Iterable<String>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn((Iterator) null).when(iterable0).iterator();
      NewsgroupIterator newsgroupIterator0 = new NewsgroupIterator(iterable0);
      // Undeclared exception!
      try { 
        newsgroupIterator0.remove();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.NewsgroupIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Iterable<String> iterable0 = (Iterable<String>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn((Iterator) null).when(iterable0).iterator();
      NewsgroupIterator newsgroupIterator0 = new NewsgroupIterator(iterable0);
      Iterator<NewsgroupInfo> iterator0 = newsgroupIterator0.iterator();
      assertSame(newsgroupIterator0, iterator0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Iterable<String> iterable0 = (Iterable<String>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn((Iterator) null).when(iterable0).iterator();
      NewsgroupIterator newsgroupIterator0 = new NewsgroupIterator(iterable0);
      // Undeclared exception!
      try { 
        newsgroupIterator0.hasNext();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.NewsgroupIterator", e);
      }
  }
}
