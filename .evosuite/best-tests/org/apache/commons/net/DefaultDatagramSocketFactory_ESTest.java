/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 22:02:02 GMT 2023
 */

package org.apache.commons.net;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.DatagramSocket;
import java.net.InetAddress;
import org.apache.commons.net.DefaultDatagramSocketFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultDatagramSocketFactory_ESTest extends DefaultDatagramSocketFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultDatagramSocketFactory defaultDatagramSocketFactory0 = new DefaultDatagramSocketFactory();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      DatagramSocket datagramSocket0 = defaultDatagramSocketFactory0.createDatagramSocket(52, inetAddress0);
      assertTrue(datagramSocket0.isBound());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultDatagramSocketFactory defaultDatagramSocketFactory0 = new DefaultDatagramSocketFactory();
      // Undeclared exception!
      try { 
        defaultDatagramSocketFactory0.createDatagramSocket((-222));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-222
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultDatagramSocketFactory defaultDatagramSocketFactory0 = new DefaultDatagramSocketFactory();
      DatagramSocket datagramSocket0 = defaultDatagramSocketFactory0.createDatagramSocket(52);
      assertFalse(datagramSocket0.isClosed());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DefaultDatagramSocketFactory defaultDatagramSocketFactory0 = new DefaultDatagramSocketFactory();
      // Undeclared exception!
      try { 
        defaultDatagramSocketFactory0.createDatagramSocket((-756), (InetAddress) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-756
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DefaultDatagramSocketFactory defaultDatagramSocketFactory0 = new DefaultDatagramSocketFactory();
      DatagramSocket datagramSocket0 = defaultDatagramSocketFactory0.createDatagramSocket();
      assertFalse(datagramSocket0.isConnected());
  }
}
