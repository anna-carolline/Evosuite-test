/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 22:50:24 GMT 2023
 */

package org.apache.commons.net.ftp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedReader;
import java.util.List;
import org.apache.commons.net.ftp.FTPClientConfig;
import org.apache.commons.net.ftp.parser.EnterpriseUnixFTPEntryParser;
import org.apache.commons.net.ftp.parser.MLSxEntryParser;
import org.apache.commons.net.ftp.parser.MVSFTPEntryParser;
import org.apache.commons.net.ftp.parser.NTFTPEntryParser;
import org.apache.commons.net.ftp.parser.NetwareFTPEntryParser;
import org.apache.commons.net.ftp.parser.UnixFTPEntryParser;
import org.apache.commons.net.ftp.parser.VMSVersioningFTPEntryParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FTPFileEntryParserImpl_ESTest extends FTPFileEntryParserImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      BufferedReader bufferedReader0 = mock(BufferedReader.class, new ViolatedAssumptionAnswer());
      doReturn("org.apache.commons.net.ftp.FTPFileEntryParserImpl").when(bufferedReader0).readLine();
      String string0 = mVSFTPEntryParser0.readNextEntry(bufferedReader0);
      assertEquals("org.apache.commons.net.ftp.FTPFileEntryParserImpl", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NetwareFTPEntryParser netwareFTPEntryParser0 = new NetwareFTPEntryParser();
      BufferedReader bufferedReader0 = mock(BufferedReader.class, new ViolatedAssumptionAnswer());
      doReturn("").when(bufferedReader0).readLine();
      String string0 = netwareFTPEntryParser0.readNextEntry(bufferedReader0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MLSxEntryParser.parseEntry("9h<*q|AzycWNBp");
      UnixFTPEntryParser unixFTPEntryParser0 = new UnixFTPEntryParser();
      VMSVersioningFTPEntryParser vMSVersioningFTPEntryParser0 = new VMSVersioningFTPEntryParser();
      unixFTPEntryParser0.setRegex("nx3<!eI>kllpiKtcD", 3);
      vMSVersioningFTPEntryParser0.group(1);
      BufferedReader bufferedReader0 = mock(BufferedReader.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(bufferedReader0).readLine();
      vMSVersioningFTPEntryParser0.readNextEntry(bufferedReader0);
      BufferedReader bufferedReader1 = mock(BufferedReader.class, new ViolatedAssumptionAnswer());
      doReturn("q;#tEY)xM<K", (String) null).when(bufferedReader1).readLine();
      String string0 = vMSVersioningFTPEntryParser0.readNextEntry(bufferedReader1);
      assertEquals("q;#tEY)xM<K", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FTPClientConfig fTPClientConfig0 = UnixFTPEntryParser.NUMERIC_DATE_CONFIG;
      NTFTPEntryParser nTFTPEntryParser0 = new NTFTPEntryParser(fTPClientConfig0);
      // Undeclared exception!
      try { 
        nTFTPEntryParser0.readNextEntry((BufferedReader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ftp.FTPFileEntryParserImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      VMSVersioningFTPEntryParser vMSVersioningFTPEntryParser0 = new VMSVersioningFTPEntryParser();
      // Undeclared exception!
      try { 
        vMSVersioningFTPEntryParser0.preParse((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ftp.parser.VMSVersioningFTPEntryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NetwareFTPEntryParser netwareFTPEntryParser0 = new NetwareFTPEntryParser();
      BufferedReader bufferedReader0 = mock(BufferedReader.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(bufferedReader0).readLine();
      String string0 = netwareFTPEntryParser0.readNextEntry(bufferedReader0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      EnterpriseUnixFTPEntryParser enterpriseUnixFTPEntryParser0 = new EnterpriseUnixFTPEntryParser();
      List<String> list0 = enterpriseUnixFTPEntryParser0.preParse((List<String>) null);
      assertNull(list0);
  }
}
