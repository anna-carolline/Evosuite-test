/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 21:51:31 GMT 2023
 */

package org.apache.commons.net.ftp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.apache.commons.net.ftp.AbstractFtpsTest;
import org.apache.commons.net.ftp.FTPSClient;
import org.apache.commons.net.ftp.FTPSClientTest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractFtpsTest_ESTest extends AbstractFtpsTest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          FTPSClientTest fTPSClientTest0 = new FTPSClientTest(true);
          // Undeclared exception!
          try { 
            fTPSClientTest0.loginClient();
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"200.42.42.0:0\" \"connect,resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1051)
             // java.net.Socket.connect(Socket.java:584)
             // org.apache.commons.net.SocketClient._connect(SocketClient.java:136)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:289)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:271)
             // org.apache.commons.net.ftp.AbstractFtpsTest.loginClient(AbstractFtpsTest.java:173)
             // sun.reflect.GeneratedMethodAccessor33.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        AbstractFtpsTest.setupServer(true, "", "", "F6r2:#c!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ftp.AbstractFtpsTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        AbstractFtpsTest.setupServer(false, " ", "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ftp.AbstractFtpsTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AbstractFtpsTest.trace("");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = AbstractFtpsTest.getTestHomeDirectory((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = AbstractFtpsTest.getTestHomeDirectory("2");
      assertEquals("2", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = AbstractFtpsTest.getTestHomeDirectory("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("FtpStatus.gen");
      FileSystemHandling.createFolder(evoSuiteFile0);
      // Undeclared exception!
      try { 
        AbstractFtpsTest.setupServer(true, "]$G>gnjA9z,;6cB>", "]$G>gnjA9z,;6cB>", "]$G>gnjA9z,;6cB>");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // MessageResourceImpl.createPropertiesPair()
         //
         verifyException("org.apache.ftpserver.message.impl.DefaultMessageResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        AbstractFtpsTest.setupServer(true, "MODE", "MODE", "");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // MODE
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FTPSClientTest fTPSClientTest0 = new FTPSClientTest(false);
      // Undeclared exception!
      try { 
        fTPSClientTest0.assertClientCode((FTPSClient) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ftp.AbstractFtpsTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FTPSClientTest fTPSClientTest0 = new FTPSClientTest(true);
      FTPSClient fTPSClient0 = new FTPSClient();
      // Undeclared exception!
      try { 
        fTPSClientTest0.assertClientCode(fTPSClient0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          FTPSClientTest fTPSClientTest0 = new FTPSClientTest(false);
          // Undeclared exception!
          try { 
            fTPSClientTest0.retrieveFile("{tQL<QNG3L,T'9^");
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"200.42.42.0:0\" \"connect,resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1051)
             // java.net.Socket.connect(Socket.java:584)
             // org.apache.commons.net.SocketClient._connect(SocketClient.java:136)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:289)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:271)
             // org.apache.commons.net.ftp.AbstractFtpsTest.loginClient(AbstractFtpsTest.java:173)
             // org.apache.commons.net.ftp.AbstractFtpsTest.retrieveFile(AbstractFtpsTest.java:201)
             // sun.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }
}
