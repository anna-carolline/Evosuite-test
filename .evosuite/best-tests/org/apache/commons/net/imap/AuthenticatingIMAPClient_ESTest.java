/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 21:47:22 GMT 2023
 */

package org.apache.commons.net.imap;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.net.ssl.SSLContext;
import org.apache.commons.net.imap.AuthenticatingIMAPClient;
import org.apache.commons.net.imap.IMAP;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AuthenticatingIMAPClient_ESTest extends AuthenticatingIMAPClient_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AuthenticatingIMAPClient authenticatingIMAPClient0 = new AuthenticatingIMAPClient("");
      AuthenticatingIMAPClient.AUTH_METHOD authenticatingIMAPClient_AUTH_METHOD0 = AuthenticatingIMAPClient.AUTH_METHOD.XOAUTH;
      // Undeclared exception!
      try { 
        authenticatingIMAPClient0.auth(authenticatingIMAPClient_AUTH_METHOD0, "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AuthenticatingIMAPClient authenticatingIMAPClient0 = new AuthenticatingIMAPClient(false, (SSLContext) null);
      assertEquals(60000, authenticatingIMAPClient0.getConnectTimeout());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AuthenticatingIMAPClient authenticatingIMAPClient0 = new AuthenticatingIMAPClient("org.apache.commons.net.imap.AuthenticatingIMAPClient$1", false);
      assertEquals(IMAP.IMAPState.DISCONNECTED_STATE, authenticatingIMAPClient0.getState());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AuthenticatingIMAPClient authenticatingIMAPClient0 = new AuthenticatingIMAPClient("", false, (SSLContext) null);
      assertEquals(IMAP.IMAPState.DISCONNECTED_STATE, authenticatingIMAPClient0.getState());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AuthenticatingIMAPClient.AUTH_METHOD authenticatingIMAPClient_AUTH_METHOD0 = AuthenticatingIMAPClient.AUTH_METHOD.PLAIN;
      String string0 = authenticatingIMAPClient_AUTH_METHOD0.getAuthName();
      assertEquals("PLAIN", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AuthenticatingIMAPClient authenticatingIMAPClient0 = new AuthenticatingIMAPClient(true);
      assertEquals(0, authenticatingIMAPClient0.getDefaultTimeout());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SSLContext sSLContext0 = mock(SSLContext.class, new ViolatedAssumptionAnswer());
      AuthenticatingIMAPClient authenticatingIMAPClient0 = new AuthenticatingIMAPClient(sSLContext0);
      AuthenticatingIMAPClient.AUTH_METHOD authenticatingIMAPClient_AUTH_METHOD0 = AuthenticatingIMAPClient.AUTH_METHOD.CRAM_MD5;
      // Undeclared exception!
      try { 
        authenticatingIMAPClient0.authenticate(authenticatingIMAPClient_AUTH_METHOD0, "\r\n", "\r\n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AuthenticatingIMAPClient authenticatingIMAPClient0 = new AuthenticatingIMAPClient();
      AuthenticatingIMAPClient.AUTH_METHOD authenticatingIMAPClient_AUTH_METHOD0 = AuthenticatingIMAPClient.AUTH_METHOD.LOGIN;
      // Undeclared exception!
      try { 
        authenticatingIMAPClient0.authenticate(authenticatingIMAPClient_AUTH_METHOD0, "En7", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }
}
