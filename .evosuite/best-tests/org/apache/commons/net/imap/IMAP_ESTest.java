/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 23:30:31 GMT 2023
 */

package org.apache.commons.net.imap;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.net.ProtocolCommandListener;
import org.apache.commons.net.imap.IMAP;
import org.apache.commons.net.imap.IMAPCommand;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IMAP_ESTest extends IMAP_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IMAP.IMAPChunkListener iMAP_IMAPChunkListener0 = IMAP.TRUE_CHUNK_LISTENER;
      IMAP iMAP0 = new IMAP();
      iMAP_IMAPChunkListener0.chunkReceived(iMAP0);
      assertEquals(143, iMAP0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      IMAP.IMAPState iMAP_IMAPState0 = IMAP.IMAPState.LOGOUT_STATE;
      iMAP0.setState(iMAP_IMAPState0);
      assertEquals(143, iMAP0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      String string0 = iMAP0.generateCommandID();
      assertEquals("AAAA", string0);
      assertEquals(143, iMAP0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      // Undeclared exception!
      try { 
        iMAP0._connectAction_();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.SocketClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      iMAP0.getReplyString();
      assertEquals(143, iMAP0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      // Undeclared exception!
      try { 
        iMAP0.sendCommand("", "&UOG)QiB");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      IMAPCommand iMAPCommand0 = IMAPCommand.XOAUTH;
      // Undeclared exception!
      try { 
        iMAP0.sendCommand(iMAPCommand0, "Xgd9T8A1?#~t");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      ProtocolCommandListener protocolCommandListener0 = mock(ProtocolCommandListener.class, new ViolatedAssumptionAnswer());
      iMAP0.addProtocolCommandListener(protocolCommandListener0);
      iMAP0.fireReplyReceived(2605, "");
      assertEquals(143, iMAP0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      iMAP0.fireReplyReceived((-81), "u");
      assertEquals(143, iMAP0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = IMAP.quoteMailboxName("\"UAy");
      assertEquals("\"UAy", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = IMAP.quoteMailboxName("\".~}#BKZh :\"");
      assertEquals("\".~}#BKZh :\"", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = IMAP.quoteMailboxName("Y");
      assertEquals("Y", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = IMAP.quoteMailboxName("");
      assertEquals("\"\"", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = IMAP.quoteMailboxName((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = IMAP.quoteMailboxName(".~}#BKZh :");
      assertEquals("\".~}#BKZh :\"", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      iMAP0.getReplyStrings();
      assertEquals(143, iMAP0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      IMAPCommand iMAPCommand0 = IMAPCommand.NOOP;
      // Undeclared exception!
      try { 
        iMAP0.doCommand(iMAPCommand0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      // Undeclared exception!
      try { 
        iMAP0.sendData("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      IMAPCommand iMAPCommand0 = IMAPCommand.SEARCH;
      // Undeclared exception!
      try { 
        iMAP0.doCommand(iMAPCommand0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      iMAP0.setChunkListener((IMAP.IMAPChunkListener) null);
      assertEquals(143, iMAP0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      // Undeclared exception!
      try { 
        iMAP0.sendCommand("{`v*\"IF,1JS\"50jvb5");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      IMAPCommand iMAPCommand0 = IMAPCommand.SELECT;
      // Undeclared exception!
      try { 
        iMAP0.sendCommand(iMAPCommand0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      iMAP0.disconnect();
      assertEquals(143, iMAP0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      iMAP0.getState();
      assertEquals(143, iMAP0.getDefaultPort());
  }
}
