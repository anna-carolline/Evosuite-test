/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 22:53:35 GMT 2023
 */

package org.apache.commons.net;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.apache.commons.net.SocketClientTest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.opentest4j.AssertionFailedError;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SocketClientTest_ESTest extends SocketClientTest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SocketClientTest socketClientTest0 = new SocketClientTest();
      socketClientTest0.testProxySettings();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          SocketClientTest socketClientTest0 = new SocketClientTest();
          // Undeclared exception!
          try { 
            socketClientTest0.testConnectUnresolved();
            fail("Expecting exception: AssertionFailedError");
          
          } catch(AssertionFailedError e) {
             //
             // Unexpected exception type thrown, expected: <java.net.UnknownHostException> but was: <java.lang.SecurityException>
             //
             verifyException("org.junit.jupiter.api.AssertionFailureBuilder", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          SocketClientTest socketClientTest0 = new SocketClientTest();
          // Undeclared exception!
          try { 
            socketClientTest0.testConnectResolved();
            fail("Expecting exception: AssertionFailedError");
          
          } catch(AssertionFailedError e) {
             //
             // Unexpected exception type thrown, expected: <java.io.IOException> but was: <java.lang.SecurityException>
             //
             verifyException("org.junit.jupiter.api.AssertionFailureBuilder", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }
}
