/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 21:32:19 GMT 2023
 */

package org.apache.commons.net.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Writer;
import org.apache.commons.net.io.DotTerminatedMessageWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DotTerminatedMessageWriter_ESTest extends DotTerminatedMessageWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      assertNotNull(dotTerminatedMessageWriter0);
      
      // Undeclared exception!
      try { 
        dotTerminatedMessageWriter0.write((char[]) null, 2735, 13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.io.DotTerminatedMessageWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      assertNotNull(dotTerminatedMessageWriter0);
      
      // Undeclared exception!
      try { 
        dotTerminatedMessageWriter0.write((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.io.DotTerminatedMessageWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      assertNotNull(dotTerminatedMessageWriter0);
      
      char[] charArray0 = new char[9];
      dotTerminatedMessageWriter0.close();
      // Undeclared exception!
      try { 
        dotTerminatedMessageWriter0.write(charArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.io.DotTerminatedMessageWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      assertNotNull(dotTerminatedMessageWriter0);
      
      // Undeclared exception!
      try { 
        dotTerminatedMessageWriter0.write((String) null, (-1), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.io.DotTerminatedMessageWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      assertNotNull(dotTerminatedMessageWriter0);
      
      dotTerminatedMessageWriter0.close();
      // Undeclared exception!
      try { 
        dotTerminatedMessageWriter0.write("=QTb<", 0, 2329);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.io.DotTerminatedMessageWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      assertNotNull(dotTerminatedMessageWriter0);
      
      // Undeclared exception!
      try { 
        dotTerminatedMessageWriter0.write("", 1570, 1570);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1570
         //
         verifyException("org.apache.commons.net.io.DotTerminatedMessageWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      assertNotNull(dotTerminatedMessageWriter0);
      
      // Undeclared exception!
      try { 
        dotTerminatedMessageWriter0.write((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.io.DotTerminatedMessageWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      assertNotNull(dotTerminatedMessageWriter0);
      
      dotTerminatedMessageWriter0.close();
      // Undeclared exception!
      try { 
        dotTerminatedMessageWriter0.write("~!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.io.DotTerminatedMessageWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      assertNotNull(dotTerminatedMessageWriter0);
      
      dotTerminatedMessageWriter0.close();
      // Undeclared exception!
      try { 
        dotTerminatedMessageWriter0.write(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.io.DotTerminatedMessageWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      assertNotNull(dotTerminatedMessageWriter0);
      
      dotTerminatedMessageWriter0.close();
      // Undeclared exception!
      try { 
        dotTerminatedMessageWriter0.flush();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.io.DotTerminatedMessageWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      assertNotNull(dotTerminatedMessageWriter0);
      
      DotTerminatedMessageWriter dotTerminatedMessageWriter1 = new DotTerminatedMessageWriter(dotTerminatedMessageWriter0);
      assertFalse(dotTerminatedMessageWriter1.equals((Object)dotTerminatedMessageWriter0));
      assertNotNull(dotTerminatedMessageWriter1);
      
      dotTerminatedMessageWriter0.close();
      assertFalse(dotTerminatedMessageWriter0.equals((Object)dotTerminatedMessageWriter1));
      assertNotSame(dotTerminatedMessageWriter0, dotTerminatedMessageWriter1);
      
      // Undeclared exception!
      try { 
        dotTerminatedMessageWriter1.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.io.DotTerminatedMessageWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = null;
      try {
        dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      assertNotNull(dotTerminatedMessageWriter0);
      
      Writer writer1 = dotTerminatedMessageWriter0.append((CharSequence) "\r\n");
      assertSame(dotTerminatedMessageWriter0, writer1);
      assertSame(writer1, dotTerminatedMessageWriter0);
      assertNotNull(writer1);
      
      dotTerminatedMessageWriter0.write((int) '.');
      assertSame(dotTerminatedMessageWriter0, writer1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      assertNotNull(dotTerminatedMessageWriter0);
      
      Writer writer1 = dotTerminatedMessageWriter0.append('.');
      assertSame(dotTerminatedMessageWriter0, writer1);
      assertSame(writer1, dotTerminatedMessageWriter0);
      assertNotNull(writer1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      assertNotNull(dotTerminatedMessageWriter0);
      
      char[] charArray0 = new char[6];
      dotTerminatedMessageWriter0.write(charArray0, (-1028), (-2756));
      assertEquals(6, charArray0.length);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      assertNotNull(dotTerminatedMessageWriter0);
      
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        dotTerminatedMessageWriter0.write(charArray0, 1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.net.io.DotTerminatedMessageWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      assertNotNull(dotTerminatedMessageWriter0);
      
      char[] charArray0 = new char[9];
      dotTerminatedMessageWriter0.write(charArray0);
      assertEquals(9, charArray0.length);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      assertNotNull(dotTerminatedMessageWriter0);
      
      DotTerminatedMessageWriter dotTerminatedMessageWriter1 = new DotTerminatedMessageWriter(dotTerminatedMessageWriter0);
      assertFalse(dotTerminatedMessageWriter1.equals((Object)dotTerminatedMessageWriter0));
      assertNotNull(dotTerminatedMessageWriter1);
      
      dotTerminatedMessageWriter1.close();
      assertFalse(dotTerminatedMessageWriter0.equals((Object)dotTerminatedMessageWriter1));
      assertFalse(dotTerminatedMessageWriter1.equals((Object)dotTerminatedMessageWriter0));
      assertNotSame(dotTerminatedMessageWriter0, dotTerminatedMessageWriter1);
      assertNotSame(dotTerminatedMessageWriter1, dotTerminatedMessageWriter0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      assertNotNull(dotTerminatedMessageWriter0);
      
      dotTerminatedMessageWriter0.write(10);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      dotTerminatedMessageWriter0.write(".\r\n");
      dotTerminatedMessageWriter0.close();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      dotTerminatedMessageWriter0.write(13);
      dotTerminatedMessageWriter0.close();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      dotTerminatedMessageWriter0.close();
      dotTerminatedMessageWriter0.close();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      dotTerminatedMessageWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      DotTerminatedMessageWriter dotTerminatedMessageWriter0 = new DotTerminatedMessageWriter(writer0);
      dotTerminatedMessageWriter0.write(">NZ3|-G2B_p8=gvHZm", 0, 0);
  }
}
