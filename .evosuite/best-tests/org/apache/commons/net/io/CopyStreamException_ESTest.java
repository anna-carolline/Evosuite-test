/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 21:38:18 GMT 2023
 */

package org.apache.commons.net.io;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.IOException;
import org.apache.commons.net.io.CopyStreamException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockIOException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CopyStreamException_ESTest extends CopyStreamException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockIOException mockIOException0 = new MockIOException();
      CopyStreamException copyStreamException0 = new CopyStreamException("}c:VGM", 1L, mockIOException0);
      long long0 = copyStreamException0.getTotalBytesTransferred();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CopyStreamException copyStreamException0 = new CopyStreamException("f^C^#X7ML!81S\"&)", (-1L), (IOException) null);
      long long0 = copyStreamException0.getTotalBytesTransferred();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockIOException mockIOException0 = new MockIOException();
      CopyStreamException copyStreamException0 = new CopyStreamException("}c:VGM", 1L, mockIOException0);
      IOException iOException0 = copyStreamException0.getIOException();
      assertSame(mockIOException0, iOException0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CopyStreamException copyStreamException0 = new CopyStreamException("", 0L, (IOException) null);
      long long0 = copyStreamException0.getTotalBytesTransferred();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CopyStreamException copyStreamException0 = new CopyStreamException("", 0L, (IOException) null);
      IOException iOException0 = copyStreamException0.getIOException();
      assertNull(iOException0);
  }
}
