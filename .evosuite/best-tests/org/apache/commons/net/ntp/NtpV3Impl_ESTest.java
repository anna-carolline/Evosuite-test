/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 22:12:28 GMT 2023
 */

package org.apache.commons.net.ntp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.DatagramPacket;
import org.apache.commons.net.ntp.NtpV3Impl;
import org.apache.commons.net.ntp.NtpV3Packet;
import org.apache.commons.net.ntp.TimeStamp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NtpV3Impl_ESTest extends NtpV3Impl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      TimeStamp timeStamp0 = ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.setPrecision(3809);
      ntpV3Impl0.getRootDispersion();
      ntpV3Impl0.getReferenceId();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.getRootDelayInMillisDouble();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.setPoll(0);
      ntpV3Impl0.setRootDispersion(0);
      ntpV3Impl0.setVersion(787);
      ntpV3Impl0.getMode();
      ntpV3Impl0.setReceiveTimeStamp(timeStamp0);
      int int0 = NtpV3Packet.MODE_CONTROL_MESSAGE;
      ntpV3Impl0.getMode();
      TimeStamp timeStamp1 = ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.setReferenceTime(timeStamp1);
      ntpV3Impl0.setStratum(6);
      ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.hashCode();
      ntpV3Impl0.setPoll((-2831));
      ntpV3Impl0.setTransmitTime(timeStamp0);
      NtpV3Impl.ui((byte)0);
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.getLeapIndicator();
      ntpV3Impl0.getLeapIndicator();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeStamp timeStamp0 = ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.getReceiveTimeStamp();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      TimeStamp timeStamp1 = ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.getReferenceId();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.setPrecision(0);
      ntpV3Impl0.getRootDispersion();
      ntpV3Impl0.setRootDispersion((-1425));
      ntpV3Impl0.toString();
      ntpV3Impl0.getStratum();
      ntpV3Impl0.equals(timeStamp0);
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.getPoll();
      ntpV3Impl0.setReceiveTimeStamp(timeStamp1);
      ntpV3Impl0.setOriginateTimeStamp(timeStamp0);
      ntpV3Impl0.equals(timeStamp0);
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.getPoll();
      ntpV3Impl0.getReferenceId();
      ntpV3Impl0.getRootDispersionInMillis();
      ntpV3Impl0.setStratum(63);
      ntpV3Impl0.getRootDispersionInMillisDouble();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getRootDispersion();
      ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.equals(ntpV3Impl0);
      NtpV3Impl.ul((byte) (-109));
      int int0 = NtpV3Packet.LI_NO_WARNING;
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.equals("(3Vj,jDg]{3I>}If$,U");
      TimeStamp timeStamp0 = ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setTransmitTime(timeStamp0);
      ntpV3Impl0.setRootDispersion(3320);
      ntpV3Impl0.setPoll(0);
      ntpV3Impl0.getModeName();
      NtpV3Impl.ui((byte)40);
      ntpV3Impl0.getReferenceId();
      ntpV3Impl0.getStratum();
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.hashCode();
      ntpV3Impl0.getVersion();
      ntpV3Impl0.setReferenceTime(timeStamp0);
      NtpV3Impl.ui((byte)63);
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getRootDelay();
      ntpV3Impl0.getRootDispersion();
      ntpV3Impl0.getMode();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getReferenceIdString();
      TimeStamp timeStamp0 = ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.setLeapIndicator((-764));
      ntpV3Impl0.getLeapIndicator();
      ntpV3Impl0.equals(timeStamp0);
      DatagramPacket datagramPacket1 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.getLeapIndicator();
      ntpV3Impl0.setVersion(0);
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setDatagramPacket(datagramPacket1);
      ntpV3Impl0.getLeapIndicator();
      NtpV3Impl.ui((byte)2);
      ntpV3Impl0.getRootDispersionInMillisDouble();
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.setVersion(21);
      ntpV3Impl0.getStratum();
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.toString();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setRootDelay((-1));
      ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.getReferenceIdString();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.getRootDelayInMillisDouble();
      DatagramPacket datagramPacket1 = ntpV3Impl0.getDatagramPacket();
      TimeStamp timeStamp0 = ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.getReferenceId();
      ntpV3Impl0.setRootDispersion(0);
      ntpV3Impl0.setPrecision((-1));
      ntpV3Impl0.getRootDispersionInMillisDouble();
      ntpV3Impl0.setRootDispersion((-2345));
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.setRootDelay(56);
      ntpV3Impl0.setLeapIndicator((-1));
      ntpV3Impl0.setOriginateTimeStamp(timeStamp0);
      ntpV3Impl0.getVersion();
      ntpV3Impl0.setPrecision(0);
      ntpV3Impl0.getVersion();
      ntpV3Impl0.getVersion();
      ntpV3Impl0.toString();
      ntpV3Impl0.setDatagramPacket(datagramPacket1);
      ntpV3Impl0.getPrecision();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getReferenceIdString();
      TimeStamp timeStamp0 = ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getPoll();
      ntpV3Impl0.getRootDelayInMillisDouble();
      ntpV3Impl0.setOriginateTimeStamp(timeStamp0);
      TimeStamp timeStamp1 = ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.getRootDelayInMillisDouble();
      NtpV3Impl.ul((byte)5);
      ntpV3Impl0.getRootDelay();
      ntpV3Impl0.setRootDelay(0);
      ntpV3Impl0.setPoll(0);
      ntpV3Impl0.getReferenceId();
      ntpV3Impl0.getPoll();
      NtpV3Impl.ul((byte)5);
      ntpV3Impl0.setMode((byte)5);
      ntpV3Impl0.getPrecision();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      NtpV3Impl.ui((byte)5);
      ntpV3Impl0.setLeapIndicator(0);
      ntpV3Impl0.setRootDispersion(5);
      ntpV3Impl0.setReferenceTime(timeStamp1);
      ntpV3Impl0.setRootDelay(199);
      ntpV3Impl0.getRootDelayInMillisDouble();
      ntpV3Impl0.getModeName();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      TimeStamp timeStamp0 = ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.setPrecision(3809);
      ntpV3Impl0.getRootDispersion();
      ntpV3Impl0.getReferenceId();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.getRootDelayInMillisDouble();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.setPoll(0);
      ntpV3Impl0.setRootDispersion(0);
      ntpV3Impl0.setVersion(787);
      ntpV3Impl0.getMode();
      ntpV3Impl0.setReceiveTimeStamp(timeStamp0);
      ntpV3Impl0.getPoll();
      ntpV3Impl0.getMode();
      TimeStamp timeStamp1 = ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.setReferenceTime(timeStamp1);
      ntpV3Impl0.setStratum(0);
      ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.hashCode();
      ntpV3Impl0.setPoll((-2831));
      ntpV3Impl0.setTransmitTime(timeStamp0);
      NtpV3Impl.ui((byte)0);
      ntpV3Impl0.getReferenceIdString();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getRootDelayInMillisDouble();
      ntpV3Impl0.getRootDelayInMillisDouble();
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.getLeapIndicator();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.getRootDispersionInMillisDouble();
      ntpV3Impl0.getRootDelay();
      ntpV3Impl0.toString();
      ntpV3Impl0.setRootDispersion(1469);
      ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.setReferenceId((-5079));
      NtpV3Impl.ul((byte)56);
      ntpV3Impl0.toString();
      ntpV3Impl0.getRootDispersionInMillisDouble();
      NtpV3Impl.ul((byte)56);
      ntpV3Impl0.setPoll((-5079));
      ntpV3Impl0.getReferenceId();
      ntpV3Impl0.setLeapIndicator(0);
      ntpV3Impl0.setPoll((-481));
      ntpV3Impl0.setStratum(3);
      ntpV3Impl0.setReferenceId(0);
      ntpV3Impl0.getDatagramPacket();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getStratum();
      ntpV3Impl0.getTransmitTimeStamp();
      TimeStamp timeStamp0 = ntpV3Impl0.getTransmitTimeStamp();
      TimeStamp timeStamp1 = ntpV3Impl0.getReceiveTimeStamp();
      TimeStamp timeStamp2 = ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.setLeapIndicator(5);
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      NtpV3Impl.ul((byte)2);
      ntpV3Impl0.setTransmitTime(timeStamp2);
      ntpV3Impl0.getStratum();
      ntpV3Impl0.setReferenceTime(timeStamp1);
      ntpV3Impl0.setPrecision(6092);
      ntpV3Impl0.getRootDispersionInMillisDouble();
      ntpV3Impl0.setReceiveTimeStamp(timeStamp0);
      ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getRootDispersionInMillis();
      ntpV3Impl0.getVersion();
      ntpV3Impl0.getRootDispersionInMillisDouble();
      ntpV3Impl0.setReferenceTime(timeStamp1);
      TimeStamp timeStamp3 = ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.getPrecision();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.setReferenceTime(timeStamp3);
      ntpV3Impl0.getLeapIndicator();
      ntpV3Impl0.setMode(517);
      ntpV3Impl0.setReferenceId(2);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.getTransmitTimeStamp();
      TimeStamp timeStamp0 = ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getVersion();
      ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getRootDispersion();
      ntpV3Impl0.toString();
      ntpV3Impl0.getVersion();
      ntpV3Impl0.getPoll();
      ntpV3Impl0.setPoll(0);
      ntpV3Impl0.setOriginateTimeStamp(timeStamp0);
      ntpV3Impl0.setReferenceId(0);
      TimeStamp timeStamp1 = ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.setVersion((-124));
      ntpV3Impl0.getRootDispersionInMillisDouble();
      ntpV3Impl0.setPrecision(0);
      ntpV3Impl0.setReceiveTimeStamp(timeStamp1);
      ntpV3Impl0.getModeName();
      ntpV3Impl0.setReferenceId(0);
      ntpV3Impl0.setRootDispersion(0);
      ntpV3Impl0.getRootDispersionInMillis();
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.getReceiveTimeStamp();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.setVersion((-2396));
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.toString();
      ntpV3Impl0.getVersion();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getModeName();
      TimeStamp timeStamp0 = ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.toString();
      ntpV3Impl0.getReceiveTimeStamp();
      TimeStamp timeStamp1 = ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getReceiveTimeStamp();
      TimeStamp timeStamp2 = ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.setOriginateTimeStamp(timeStamp2);
      ntpV3Impl0.setReferenceTime(timeStamp2);
      ntpV3Impl0.setVersion((-3079));
      ntpV3Impl0.setMode(0);
      ntpV3Impl0.getPrecision();
      ntpV3Impl0.setOriginateTimeStamp(timeStamp2);
      ntpV3Impl0.setTransmitTime(timeStamp1);
      ntpV3Impl0.setStratum((-3079));
      ntpV3Impl0.getPrecision();
      ntpV3Impl0.getRootDispersion();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.setTransmitTime(timeStamp0);
      ntpV3Impl0.getVersion();
      ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getPoll();
      ntpV3Impl0.getRootDelay();
      ntpV3Impl0.getStratum();
      ntpV3Impl0.toString();
      ntpV3Impl0.getRootDelay();
      ntpV3Impl0.getType();
      ntpV3Impl0.getStratum();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getRootDispersionInMillisDouble();
      ntpV3Impl0.getRootDispersion();
      ntpV3Impl0.setReferenceId((-3368));
      ntpV3Impl0.getMode();
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.setPrecision(56);
      ntpV3Impl0.getModeName();
      TimeStamp timeStamp0 = ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.setOriginateTimeStamp(timeStamp0);
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.setLeapIndicator(806);
      ntpV3Impl0.getPrecision();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.hashCode();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.setOriginateTimeStamp(timeStamp0);
      ntpV3Impl0.getRootDispersionInMillisDouble();
      ntpV3Impl0.getRootDispersion();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setStratum(806);
      ntpV3Impl0.toString();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.setMode((-460));
      ntpV3Impl0.setRootDispersion((-113));
      ntpV3Impl0.getPoll();
      ntpV3Impl0.getRootDispersion();
      ntpV3Impl0.setMode((-113));
      ntpV3Impl0.setPrecision((-113));
      ntpV3Impl0.toString();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.getTransmitTimeStamp();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.toString();
      ntpV3Impl0.toString();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getRootDelay();
      ntpV3Impl0.toString();
      ntpV3Impl0.getReferenceTimeStamp();
      TimeStamp timeStamp0 = ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.getReferenceId();
      ntpV3Impl0.setRootDelay(0);
      ntpV3Impl0.setLeapIndicator(0);
      ntpV3Impl0.setRootDelay(0);
      ntpV3Impl0.getVersion();
      ntpV3Impl0.setLeapIndicator(0);
      ntpV3Impl0.getRootDispersionInMillisDouble();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.setPoll((-2367));
      ntpV3Impl0.getPoll();
      ntpV3Impl0.getRootDelay();
      ntpV3Impl0.getRootDispersion();
      ntpV3Impl0.getRootDispersionInMillis();
      ntpV3Impl0.getRootDelay();
      ntpV3Impl0.setTransmitTime(timeStamp0);
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.setStratum((-2992));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getRootDispersionInMillis();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.setReceiveTimeStamp((TimeStamp) null);
      ntpV3Impl0.getPoll();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.toString();
      ntpV3Impl0.getLeapIndicator();
      ntpV3Impl0.equals("Reserved");
      ntpV3Impl0.getModeName();
      ntpV3Impl0.setPrecision(2425);
      ntpV3Impl0.toString();
      TimeStamp timeStamp0 = ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.setStratum(56);
      ntpV3Impl0.getRootDispersionInMillisDouble();
      ntpV3Impl0.setRootDispersion(2375);
      ntpV3Impl0.setReceiveTimeStamp(timeStamp0);
      ntpV3Impl0.getLeapIndicator();
      NtpV3Impl.ui((byte) (-10));
      ntpV3Impl0.getRootDispersionInMillisDouble();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      NtpV3Impl ntpV3Impl1 = new NtpV3Impl();
      ntpV3Impl0.equals(ntpV3Impl1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeStamp timeStamp0 = ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.getReceiveTimeStamp();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      TimeStamp timeStamp1 = ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.getReferenceId();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.setPrecision(0);
      ntpV3Impl0.getRootDispersion();
      ntpV3Impl0.setRootDispersion((-1425));
      ntpV3Impl0.getStratum();
      ntpV3Impl0.equals(timeStamp0);
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.getPoll();
      ntpV3Impl0.setReceiveTimeStamp(timeStamp1);
      ntpV3Impl0.setOriginateTimeStamp(timeStamp0);
      ntpV3Impl0.equals(timeStamp0);
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.getPoll();
      ntpV3Impl0.getReferenceId();
      ntpV3Impl0.getRootDispersionInMillis();
      ntpV3Impl0.setStratum(63);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeStamp timeStamp0 = ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.setPoll(837);
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.setTransmitTime(timeStamp0);
      ntpV3Impl0.setMode(837);
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getPoll();
      ntpV3Impl0.setPrecision(837);
      ntpV3Impl0.setRootDispersion(69);
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.getRootDispersionInMillis();
      ntpV3Impl0.setPoll(2);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      int int0 = 401;
      // Undeclared exception!
      try { 
        ntpV3Impl0.setDatagramPacket((DatagramPacket) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ntp.NtpV3Impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeStamp timeStamp0 = ntpV3Impl0.getReceiveTimeStamp();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      DatagramPacket datagramPacket1 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.toString();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.getModeName();
      ntpV3Impl0.setPrecision(3);
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.setRootDispersion(2432);
      ntpV3Impl0.setDatagramPacket(datagramPacket1);
      ntpV3Impl0.setReferenceId(3);
      ntpV3Impl0.getVersion();
      ntpV3Impl0.getRootDelayInMillisDouble();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setTransmitTime(timeStamp0);
      ntpV3Impl0.getReferenceId();
      ntpV3Impl0.setTransmitTime(timeStamp0);
      ntpV3Impl0.setPrecision(1260);
      ntpV3Impl0.setRootDispersion(8);
      ntpV3Impl0.setPrecision(3);
      ntpV3Impl0.setReferenceId(8);
      ntpV3Impl0.getReferenceId();
      ntpV3Impl0.setReferenceId(2432);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setReferenceId(856);
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.setRootDelay((-1941));
      ntpV3Impl0.setPoll(856);
      NtpV3Impl.ul((byte)0);
      ntpV3Impl0.setRootDispersion(0);
      ntpV3Impl0.getRootDispersion();
      ntpV3Impl0.getModeName();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.toString();
      ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.setVersion(7);
      ntpV3Impl0.getModeName();
      ntpV3Impl0.setLeapIndicator(7);
      ntpV3Impl0.getModeName();
      ntpV3Impl0.setStratum(0);
      ntpV3Impl0.getLeapIndicator();
      ntpV3Impl0.getPrecision();
      NtpV3Impl.ul((byte)126);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setVersion((-1791));
      ntpV3Impl0.setReferenceId((-1791));
      ntpV3Impl0.getLeapIndicator();
      TimeStamp timeStamp0 = ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.getLeapIndicator();
      ntpV3Impl0.hashCode();
      NtpV3Impl ntpV3Impl1 = new NtpV3Impl();
      TimeStamp timeStamp1 = ntpV3Impl1.getTransmitTimeStamp();
      ntpV3Impl0.setTransmitTime(timeStamp1);
      ntpV3Impl1.setTransmitTime(timeStamp0);
      ntpV3Impl1.setPrecision(0);
      ntpV3Impl1.getReferenceId();
      ntpV3Impl1.setRootDispersion((-1791));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.toString();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getReferenceIdString();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.setStratum(663);
      ntpV3Impl0.getType();
      ntpV3Impl0.setOriginateTimeStamp((TimeStamp) null);
      ntpV3Impl0.getModeName();
      NtpV3Impl.ul((byte) (-102));
      ntpV3Impl0.setLeapIndicator(2220);
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.getLeapIndicator();
      ntpV3Impl0.setRootDelay(0);
      ntpV3Impl0.setLeapIndicator((-3791));
      ntpV3Impl0.toString();
      ntpV3Impl0.hashCode();
      ntpV3Impl0.setPoll(0);
      ntpV3Impl0.getModeName();
      ntpV3Impl0.setReferenceTime((TimeStamp) null);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.setStratum((-2180));
      ntpV3Impl0.getModeName();
      ntpV3Impl0.equals("Y@VwpAKK(+-z>8U0M\";");
      ntpV3Impl0.toString();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getPoll();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.setVersion(0);
      ntpV3Impl0.getLeapIndicator();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.toString();
      ntpV3Impl0.getReferenceTimeStamp();
      TimeStamp timeStamp0 = ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getRootDispersionInMillis();
      ntpV3Impl0.setReceiveTimeStamp(timeStamp0);
      ntpV3Impl0.toString();
      ntpV3Impl0.setPoll(7);
      ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getType();
      ntpV3Impl0.getMode();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.setMode((-2739));
      ntpV3Impl0.getMode();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getPrecision();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getMode();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.getStratum();
      ntpV3Impl0.getStratum();
      ntpV3Impl0.getRootDispersionInMillis();
      ntpV3Impl0.setMode(248);
      ntpV3Impl0.setPoll(0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getVersion();
      ntpV3Impl0.setVersion(0);
      ntpV3Impl0.setLeapIndicator(0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      TimeStamp timeStamp0 = ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.setReceiveTimeStamp(timeStamp0);
      NtpV3Impl.ui((byte)2);
      ntpV3Impl0.getModeName();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.setLeapIndicator(2477);
      ntpV3Impl0.toString();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      NtpV3Impl.ul((byte)4);
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getType();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.toString();
      ntpV3Impl0.setPoll((-299));
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getLeapIndicator();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setLeapIndicator(336);
      TimeStamp timeStamp0 = ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.setReferenceTime(timeStamp0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeStamp timeStamp0 = ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.setPrecision(0);
      ntpV3Impl0.getMode();
      ntpV3Impl0.setOriginateTimeStamp(timeStamp0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.getRootDispersionInMillis();
      ntpV3Impl0.setStratum(0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getRootDelayInMillisDouble();
      ntpV3Impl0.getReferenceTimeStamp();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getRootDispersion();
      ntpV3Impl0.getOriginateTimeStamp();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.getStratum();
      ntpV3Impl0.getRootDispersionInMillisDouble();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getRootDispersion();
      ntpV3Impl0.toString();
      ntpV3Impl0.getRootDelay();
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.getReferenceId();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.setMode(1);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeStamp timeStamp0 = ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.setReceiveTimeStamp(timeStamp0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.hashCode();
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.toString();
      ntpV3Impl0.getRootDispersion();
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.getReceiveTimeStamp();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.equals((Object) null);
      NtpV3Impl.ul((byte)29);
      NtpV3Impl.ui((byte)0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.getVersion();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.getReceiveTimeStamp();
      NtpV3Impl.ul((byte) (-119));
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.getStratum();
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.toString();
      ntpV3Impl0.setVersion(396);
      ntpV3Impl0.toString();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.getRootDispersionInMillisDouble();
      ntpV3Impl0.getMode();
      ntpV3Impl0.getReferenceTimeStamp();
      NtpV3Impl.ui((byte) (-119));
      ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.getRootDelay();
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getOriginateTimeStamp();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.getRootDispersion();
      ntpV3Impl0.getReceiveTimeStamp();
      int int0 = NtpV3Packet.NTP_PORT;
      ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.getReferenceIdString();
      System.setCurrentTimeMillis(4854L);
      NtpV3Impl.ul((byte)59);
      ntpV3Impl0.getLeapIndicator();
      ntpV3Impl0.setLeapIndicator(0);
      ntpV3Impl0.setVersion(1717);
      System.setCurrentTimeMillis(0);
      DatagramPacket datagramPacket1 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setDatagramPacket(datagramPacket1);
      System.setCurrentTimeMillis(1426L);
      ntpV3Impl0.getMode();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.getType();
      ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.getRootDelay();
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.getReferenceIdString();
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.getRootDelayInMillisDouble();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.setStratum(435);
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.getRootDispersion();
      TimeStamp timeStamp0 = ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.getRootDelay();
      ntpV3Impl0.getStratum();
      ntpV3Impl0.toString();
      ntpV3Impl0.setMode(435);
      ntpV3Impl0.getReferenceId();
      ntpV3Impl0.setRootDelay(435);
      NtpV3Impl ntpV3Impl1 = new NtpV3Impl();
      ntpV3Impl0.equals(ntpV3Impl1);
      ntpV3Impl0.getRootDelay();
      ntpV3Impl0.setRootDelay(5);
      ntpV3Impl1.getRootDispersionInMillisDouble();
      ntpV3Impl1.setRootDispersion(4);
      ntpV3Impl1.setOriginateTimeStamp(timeStamp0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.setRootDispersion((-4260));
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      NtpV3Impl ntpV3Impl1 = new NtpV3Impl();
      ntpV3Impl1.getOriginateTimeStamp();
      DatagramPacket datagramPacket0 = ntpV3Impl1.getDatagramPacket();
      TimeStamp timeStamp0 = ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl1.getReferenceTimeStamp();
      ntpV3Impl0.toString();
      ntpV3Impl0.getStratum();
      ntpV3Impl0.setTransmitTime((TimeStamp) null);
      ntpV3Impl0.getRootDelay();
      ntpV3Impl1.getPrecision();
      ntpV3Impl1.setVersion(0);
      ntpV3Impl0.setLeapIndicator(1779);
      ntpV3Impl0.setTransmitTime(timeStamp0);
      ntpV3Impl1.getDatagramPacket();
      ntpV3Impl0.setVersion(5554);
      ntpV3Impl1.setRootDispersion(1779);
      ntpV3Impl1.setStratum(1779);
      ntpV3Impl0.setReferenceId((-1735));
      ntpV3Impl1.setLeapIndicator(0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      NtpV3Impl ntpV3Impl1 = new NtpV3Impl();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.getOriginateTimeStamp();
      TimeStamp timeStamp0 = ntpV3Impl1.getOriginateTimeStamp();
      ntpV3Impl0.setOriginateTimeStamp(timeStamp0);
      int int0 = NtpV3Packet.MODE_PRIVATE;
      ntpV3Impl1.getRootDispersionInMillis();
      ntpV3Impl0.getRootDispersion();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl1.getOriginateTimeStamp();
      ntpV3Impl1.setRootDelay(0);
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.getDatagramPacket();
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.getRootDispersion();
      ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.equals(ntpV3Impl0);
      NtpV3Impl.ul((byte) (-75));
      NtpV3Impl.ui((byte) (-7));
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeStamp timeStamp0 = ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.equals("6K@xA<<o;BC#G4%YD");
      TimeStamp timeStamp1 = ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.setTransmitTime(timeStamp1);
      ntpV3Impl0.toString();
      ntpV3Impl0.getPrecision();
      ntpV3Impl0.setReceiveTimeStamp(timeStamp0);
      // Undeclared exception!
      try { 
        ntpV3Impl0.setDatagramPacket((DatagramPacket) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ntp.NtpV3Impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      TimeStamp timeStamp0 = ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.setPrecision(3809);
      ntpV3Impl0.getRootDispersion();
      ntpV3Impl0.hashCode();
      ntpV3Impl0.getModeName();
      ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.getRootDelayInMillisDouble();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ntpV3Impl0.setPoll(1175587938);
      ntpV3Impl0.setRootDispersion(1175587938);
      ntpV3Impl0.setVersion(787);
      ntpV3Impl0.getMode();
      ntpV3Impl0.setReceiveTimeStamp(timeStamp0);
      ntpV3Impl0.getPoll();
      ntpV3Impl0.getMode();
      TimeStamp timeStamp1 = ntpV3Impl0.getTransmitTimeStamp();
      ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.setReferenceTime(timeStamp1);
      ntpV3Impl0.setStratum(98);
      ntpV3Impl0.hashCode();
      ntpV3Impl0.setPoll((-2831));
      ntpV3Impl0.setTransmitTime(timeStamp0);
      NtpV3Impl.ui((byte)0);
      ntpV3Impl0.getReferenceIdString();
      assertEquals(3, ntpV3Impl0.getVersion());
  }
}
