/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 22:34:20 GMT 2023
 */

package org.apache.commons.net.ftp.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.net.ftp.FTPClientConfig;
import org.apache.commons.net.ftp.FTPFile;
import org.apache.commons.net.ftp.parser.NetwareFTPEntryParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NetwareFTPEntryParser_ESTest extends NetwareFTPEntryParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FTPClientConfig fTPClientConfig0 = new FTPClientConfig();
      NetwareFTPEntryParser netwareFTPEntryParser0 = new NetwareFTPEntryParser(fTPClientConfig0);
      assertEquals("MMM dd yyyy", fTPClientConfig0.getDefaultDateFormatStr());
      assertEquals("MMM dd HH:mm", fTPClientConfig0.getRecentDateFormatStr());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NetwareFTPEntryParser netwareFTPEntryParser0 = new NetwareFTPEntryParser();
      FTPClientConfig fTPClientConfig0 = netwareFTPEntryParser0.getDefaultConfiguration();
      assertEquals("MMM dd yyyy", fTPClientConfig0.getDefaultDateFormatStr());
      assertEquals("NETWARE", fTPClientConfig0.getServerSystemKey());
      assertEquals("MMM dd HH:mm", fTPClientConfig0.getRecentDateFormatStr());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NetwareFTPEntryParser netwareFTPEntryParser0 = new NetwareFTPEntryParser();
      // Undeclared exception!
      try { 
        netwareFTPEntryParser0.parseFTPEntry((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FTPClientConfig fTPClientConfig0 = new FTPClientConfig();
      fTPClientConfig0.setDefaultDateFormatStr("com.oracle.xmlns.internal.webservices.jaxws_databinding.XmlSOAPBinding");
      NetwareFTPEntryParser netwareFTPEntryParser0 = null;
      try {
        netwareFTPEntryParser0 = new NetwareFTPEntryParser(fTPClientConfig0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'c'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FTPClientConfig fTPClientConfig0 = new FTPClientConfig("com.oracle.xmlns.internal.webservices.jaxws_databinding.XmlSOAPBinding", "pt", "pt", "pt", "~yE@C!<62`", "~yE@C!<62`");
      NetwareFTPEntryParser netwareFTPEntryParser0 = null;
      try {
        netwareFTPEntryParser0 = new NetwareFTPEntryParser(fTPClientConfig0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // expecting a pipe-delimited string containing 12 tokens
         //
         verifyException("org.apache.commons.net.ftp.FTPClientConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NetwareFTPEntryParser netwareFTPEntryParser0 = new NetwareFTPEntryParser();
      netwareFTPEntryParser0.setRegex("");
      // Undeclared exception!
      try { 
        netwareFTPEntryParser0.parseFTPEntry("");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // No group 1
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NetwareFTPEntryParser netwareFTPEntryParser0 = new NetwareFTPEntryParser();
      FTPFile fTPFile0 = netwareFTPEntryParser0.parseFTPEntry("");
      assertNull(fTPFile0);
  }
}
