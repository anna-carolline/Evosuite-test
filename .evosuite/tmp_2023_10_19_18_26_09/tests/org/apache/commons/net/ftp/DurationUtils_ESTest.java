/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 21:58:55 GMT 2023
 */

package org.apache.commons.net.ftp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Duration;
import org.apache.commons.net.ftp.DurationUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DurationUtils_ESTest extends DurationUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        DurationUtils.toMillisInt((Duration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ftp.DurationUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Duration duration0 = DurationUtils.zeroIfNull((Duration) null);
      Duration duration1 = DurationUtils.zeroIfNull(duration0);
      assertSame(duration1, duration0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Duration duration0 = DurationUtils.zeroIfNull((Duration) null);
      assertNotNull(duration0);
      
      int int0 = DurationUtils.toMillisInt(duration0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Duration duration0 = DurationUtils.zeroIfNull((Duration) null);
      assertNotNull(duration0);
      
      boolean boolean0 = DurationUtils.isPositive(duration0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      boolean boolean0 = DurationUtils.isPositive((Duration) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DurationUtils durationUtils0 = new DurationUtils();
  }
}
