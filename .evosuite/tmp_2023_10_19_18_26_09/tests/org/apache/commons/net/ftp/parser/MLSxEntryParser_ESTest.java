/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 21:59:43 GMT 2023
 */

package org.apache.commons.net.ftp.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Calendar;
import org.apache.commons.net.ftp.FTPFile;
import org.apache.commons.net.ftp.parser.MLSxEntryParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MLSxEntryParser_ESTest extends MLSxEntryParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FTPFile fTPFile0 = MLSxEntryParser.parseEntry(" %4d");
      assertNotNull(fTPFile0);
      assertEquals("%4d", fTPFile0.getName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MLSxEntryParser mLSxEntryParser0 = MLSxEntryParser.getInstance();
      // Undeclared exception!
      try { 
        mLSxEntryParser0.parseFTPEntry((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        MLSxEntryParser.parseEntry((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MLSxEntryParser mLSxEntryParser0 = new MLSxEntryParser();
      FTPFile fTPFile0 = mLSxEntryParser0.parseFTPEntry("modify");
      assertNull(fTPFile0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        MLSxEntryParser.parseGMTdateTime("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Calendar", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Calendar calendar0 = MLSxEntryParser.parseGMTdateTime(".S$+P asIl0eajyu1");
      assertNull(calendar0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MLSxEntryParser mLSxEntryParser0 = new MLSxEntryParser();
      FTPFile fTPFile0 = mLSxEntryParser0.parseFTPEntry("Z!8 ");
      assertNull(fTPFile0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MLSxEntryParser mLSxEntryParser0 = new MLSxEntryParser();
      FTPFile fTPFile0 = mLSxEntryParser0.parseFTPEntry(" ");
      assertNull(fTPFile0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        MLSxEntryParser.parseGmtInstant("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Calendar", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MLSxEntryParser mLSxEntryParser0 = MLSxEntryParser.getInstance();
      FTPFile fTPFile0 = mLSxEntryParser0.parseFTPEntry(".S$+P asIl0eajyu1");
      assertNull(fTPFile0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FTPFile fTPFile0 = MLSxEntryParser.parseEntry("]0e<p-");
      assertNull(fTPFile0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MLSxEntryParser mLSxEntryParser0 = new MLSxEntryParser();
      FTPFile fTPFile0 = mLSxEntryParser0.parseFTPEntry(" %1$tZ");
      assertNotNull(fTPFile0);
      assertEquals("%1$tZ", fTPFile0.getName());
  }
}
