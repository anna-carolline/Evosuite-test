/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 22:06:31 GMT 2023
 */

package org.apache.commons.net.ftp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.Reader;
import java.net.InetAddress;
import org.apache.commons.net.ftp.FTP;
import org.apache.commons.net.ftp.FTPCmd;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FTP_ESTest extends FTP_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.type(11, 0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FTP fTP0 = new FTP();
      fTP0._controlEncoding = "";
      fTP0.getControlEncoding();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FTP fTP0 = new FTP();
      fTP0.getCommandSupport();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FTP fTP0 = new FTP();
      // Undeclared exception!
      try { 
        fTP0.type(0, 1032);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.type(6);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FTP fTP0 = new FTP();
      // Undeclared exception!
      try { 
        fTP0.sendCommand((FTPCmd) null, "CY3cvZc-Y+|");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.sendCommand(3, ":^B2Y~/|b>OpyH");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FTP fTP0 = new FTP();
      // Undeclared exception!
      try { 
        fTP0.sendCommand((-467));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -467
         //
         verifyException("org.apache.commons.net.ftp.FTPCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FTP fTP0 = new FTP();
      // Undeclared exception!
      try { 
        fTP0.mode((-5389));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FTP fTP0 = new FTP();
      // Undeclared exception!
      try { 
        fTP0.getReplyString(25);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 25, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FTP fTP0 = new FTP();
      // Undeclared exception!
      try { 
        fTP0.eprt((InetAddress) null, 1901);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FTP fTP0 = new FTP();
      // Undeclared exception!
      try { 
        fTP0._connectAction_((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.SocketClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.sendCommand("Truncated server reply: ", "Truncated server reply: ");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FTP fTP0 = new FTP();
      FTPCmd fTPCmd0 = FTPCmd.PASS;
      try { 
        fTP0.sendCommand(fTPCmd0, "CY3cvZc-Y+|");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FTP fTP0 = new FTP();
      // Undeclared exception!
      try { 
        fTP0.sendCommand(983, "}");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 983
         //
         verifyException("org.apache.commons.net.ftp.FTPCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FTP fTP0 = new FTP();
      FTPCmd fTPCmd0 = FTPCmd.MODE;
      try { 
        fTP0.sendCommand(fTPCmd0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FTP fTP0 = new FTP();
      String string0 = fTP0.getReplyString();
      assertNull(string0);
      assertTrue(fTP0.isStrictReplyParsing());
      assertEquals("ISO-8859-1", fTP0.getControlEncoding());
      assertEquals(21, fTP0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.epsv();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.nlst((String) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.help("");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.appe("m I5a/3El:rZ4");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.mlsd("Truncated server reply: ");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.user((String) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.cwd("");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.rnfr("9'Egq<^4");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.abor();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FTP fTP0 = new FTP();
      fTP0.getReplyStrings();
      assertEquals("ISO-8859-1", fTP0.getControlEncoding());
      assertEquals(21, fTP0.getDefaultPort());
      assertTrue(fTP0.isStrictReplyParsing());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.stor("<RKGg`");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.allo(1020L);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.pass("'x=C$Tb_`mZl6LTNs-");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.list("2");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.smnt("");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FTP fTP0 = new FTP();
      // Undeclared exception!
      try { 
        fTP0.stru((-2511));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.site("Y P&");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FTP fTP0 = new FTP();
      // Undeclared exception!
      try { 
        fTP0._connectAction_();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.SocketClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.stat();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FTP fTP0 = new FTP();
      String string0 = fTP0.getControlEncoding();
      assertNotNull(string0);
      assertEquals("ISO-8859-1", string0);
      assertTrue(fTP0.isStrictReplyParsing());
      assertEquals(21, fTP0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.rest("");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.noop();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.nlst();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.pwd();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.mfmt("", "");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.mlst("");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FTP fTP0 = new FTP();
      // Undeclared exception!
      try { 
        fTP0.__noop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.acct("");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.list();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.feat();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FTP fTP0 = new FTP();
      boolean boolean0 = fTP0.isStrictReplyParsing();
      assertEquals(21, fTP0.getDefaultPort());
      assertEquals("ISO-8859-1", fTP0.getControlEncoding());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.mdtm("Connection closed without indication.");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FTP fTP0 = new FTP();
      // Undeclared exception!
      try { 
        fTP0.getReplyString((-944));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.rnto("org.apache.commons.net.ftp.FTP");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.pasv();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FTP fTP0 = new FTP();
      int int0 = fTP0.getReplyCode();
      assertEquals(21, fTP0.getDefaultPort());
      assertTrue(fTP0.isStrictReplyParsing());
      assertEquals("ISO-8859-1", fTP0.getControlEncoding());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.mlsd();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.help();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FTP fTP0 = new FTP();
      fTP0.disconnect();
      assertEquals(21, fTP0.getDefaultPort());
      assertEquals("ISO-8859-1", fTP0.getControlEncoding());
      assertTrue(fTP0.isStrictReplyParsing());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.allo((-2841L), 30);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.retr("XyBx`AM/[}+^A_");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FTP fTP0 = new FTP();
      // Undeclared exception!
      try { 
        fTP0.getReply();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FTP fTP0 = new FTP();
      fTP0.setStrictReplyParsing(true);
      assertTrue(fTP0.isStrictReplyParsing());
      assertEquals("ISO-8859-1", fTP0.getControlEncoding());
      assertEquals(21, fTP0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.mlst();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.allo((-2016));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FTP fTP0 = new FTP();
      // Undeclared exception!
      try { 
        fTP0.__getReplyNoReport();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.sendCommand(1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.syst();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.stou();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FTP fTP0 = new FTP();
      fTP0.setStrictMultilineParsing(true);
      assertTrue(fTP0.isStrictMultilineParsing());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.cdup();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.stou("H ");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.rmd("RMD");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FTP fTP0 = new FTP();
      assertEquals("ISO-8859-1", fTP0.getControlEncoding());
      
      fTP0.setControlEncoding("");
      assertEquals("", fTP0.getControlEncoding());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.sendCommand("");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.stat((String) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.rein();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.allo(0, (-1));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FTP fTP0 = new FTP();
      // Undeclared exception!
      try { 
        fTP0.type((-1534));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.size("G/mP,TQ4L/,5DU}");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FTP fTP0 = new FTP();
      // Undeclared exception!
      try { 
        fTP0.port((InetAddress) null, (-2688));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.quit();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.mkd("");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.dele("j2Q[=/u}AAKC");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FTP fTP0 = new FTP();
      try { 
        fTP0.mode(12);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Connection is not open
         //
         verifyException("org.apache.commons.net.ftp.FTP", e);
      }
  }
}
