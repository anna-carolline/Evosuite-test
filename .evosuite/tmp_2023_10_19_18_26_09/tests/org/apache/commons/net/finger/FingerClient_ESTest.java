/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 22:37:28 GMT 2023
 */

package org.apache.commons.net.finger;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
import org.apache.commons.net.finger.FingerClient;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FingerClient_ESTest extends FingerClient_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FingerClient fingerClient0 = new FingerClient();
      // Undeclared exception!
      try { 
        fingerClient0.query(false, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FingerClient fingerClient0 = new FingerClient();
      // Undeclared exception!
      try { 
        fingerClient0.getInputStream(false, "com.oracle.xmlns.internal.webservices.jaxws_databinding.XmlBindingType", "com.oracle.xmlns.internal.webservices.jaxws_databinding.XmlBindingType");
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // com.oracle.xmlns.internal.webservices.jaxws_databinding.XmlBindingType
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FingerClient fingerClient0 = new FingerClient();
      // Undeclared exception!
      try { 
        fingerClient0.getInputStream(false, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FingerClient fingerClient0 = new FingerClient();
      // Undeclared exception!
      try { 
        fingerClient0.getInputStream(false, "com.oracle.xmlns.internal.webservices.jaxws_databinding.XmlWebServiceProvider", "");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // 
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FingerClient fingerClient0 = new FingerClient();
      // Undeclared exception!
      try { 
        fingerClient0.getInputStream(true, "/W ", "/W ");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // /W 
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FingerClient fingerClient0 = new FingerClient();
      // Undeclared exception!
      try { 
        fingerClient0.getInputStream(true, "-:u2\"JT#sC");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FingerClient fingerClient0 = new FingerClient();
      // Undeclared exception!
      try { 
        fingerClient0.getInputStream(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FingerClient fingerClient0 = new FingerClient();
      // Undeclared exception!
      try { 
        fingerClient0.query(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedOutputStream", e);
      }
  }
}
