/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 22:25:19 GMT 2023
 */

package org.apache.commons.net.ntp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.DatagramPacket;
import java.net.InetAddress;
import java.util.List;
import org.apache.commons.net.ntp.NtpV3Impl;
import org.apache.commons.net.ntp.NtpV3Packet;
import org.apache.commons.net.ntp.TimeInfo;
import org.apache.commons.net.ntp.TimeStamp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TimeInfo_ESTest extends TimeInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Impl0, 184L);
      List<String> list0 = timeInfo0.getComments();
      assertNotNull(list0);
      
      TimeInfo timeInfo1 = new TimeInfo(ntpV3Impl0, 2L, list0);
      boolean boolean0 = timeInfo0.equals(timeInfo1);
      assertEquals(2, list0.size());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TimeStamp timeStamp0 = TimeStamp.getCurrentTime();
      TimeStamp timeStamp1 = TimeStamp.getCurrentTime();
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      doReturn(timeStamp0, timeStamp0).when(ntpV3Packet0).getOriginateTimeStamp();
      doReturn(timeStamp0, timeStamp0).when(ntpV3Packet0).getReceiveTimeStamp();
      doReturn(timeStamp0, timeStamp1).when(ntpV3Packet0).getTransmitTimeStamp();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, (-9L));
      List<String> list0 = timeInfo0.getComments();
      assertNotNull(list0);
      
      TimeInfo timeInfo1 = new TimeInfo(ntpV3Packet0, (-9L), list0);
      assertEquals(4, list0.size());
      assertEquals(696204640664L, (long)timeInfo0.getOffset());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TimeStamp timeStamp0 = new TimeStamp("f");
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      doReturn(timeStamp0).when(ntpV3Packet0).getOriginateTimeStamp();
      doReturn(timeStamp0).when(ntpV3Packet0).getReceiveTimeStamp();
      doReturn(timeStamp0).when(ntpV3Packet0).getTransmitTimeStamp();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, 984L);
      assertEquals(1042989255008L, (long)timeInfo0.getOffset());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, 0L, false);
      long long0 = timeInfo0.getReturnTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, 2147483648L, false);
      long long0 = timeInfo0.getReturnTime();
      assertEquals(2147483648L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TimeStamp timeStamp0 = TimeStamp.getNtpTime((-1259L));
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      doReturn(timeStamp0).when(ntpV3Packet0).getOriginateTimeStamp();
      doReturn(timeStamp0).when(ntpV3Packet0).getReceiveTimeStamp();
      doReturn(timeStamp0).when(ntpV3Packet0).getTransmitTimeStamp();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, 255L, true);
      Long long0 = timeInfo0.getOffset();
      assertEquals((-757L), (long)long0);
      assertNotNull(long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TimeStamp timeStamp0 = TimeStamp.getCurrentTime();
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      doReturn(timeStamp0).when(ntpV3Packet0).getOriginateTimeStamp();
      doReturn(timeStamp0).when(ntpV3Packet0).getReceiveTimeStamp();
      doReturn(timeStamp0).when(ntpV3Packet0).getTransmitTimeStamp();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, 3146L);
      Long long0 = timeInfo0.getOffset();
      assertEquals(696204639087L, (long)long0);
      assertNotNull(long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TimeStamp timeStamp0 = TimeStamp.getNtpTime((-1259L));
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      doReturn(timeStamp0).when(ntpV3Packet0).getOriginateTimeStamp();
      doReturn(timeStamp0).when(ntpV3Packet0).getReceiveTimeStamp();
      doReturn(timeStamp0).when(ntpV3Packet0).getTransmitTimeStamp();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, 255L, true);
      Long long0 = timeInfo0.getDelay();
      assertEquals((-757L), (long)timeInfo0.getOffset());
      assertNotNull(long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TimeStamp timeStamp0 = TimeStamp.getNtpTime((-1259L));
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      doReturn(timeStamp0).when(ntpV3Packet0).getOriginateTimeStamp();
      doReturn(timeStamp0).when(ntpV3Packet0).getReceiveTimeStamp();
      doReturn(timeStamp0).when(ntpV3Packet0).getTransmitTimeStamp();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, 255L, true);
      List<String> list0 = timeInfo0.getComments();
      assertEquals((-757L), (long)timeInfo0.getOffset());
      assertNotNull(list0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TimeStamp timeStamp0 = TimeStamp.getCurrentTime();
      byte[] byteArray0 = new byte[7];
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress("c", 2436);
      DatagramPacket datagramPacket0 = new DatagramPacket(byteArray0, 0, 6, mockInetSocketAddress0);
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      doReturn(datagramPacket0).when(ntpV3Packet0).getDatagramPacket();
      doReturn(timeStamp0).when(ntpV3Packet0).getOriginateTimeStamp();
      doReturn(timeStamp0).when(ntpV3Packet0).getReceiveTimeStamp();
      doReturn(timeStamp0).when(ntpV3Packet0).getTransmitTimeStamp();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, 3146L);
      timeInfo0.getAddress();
      assertEquals(696204639087L, (long)timeInfo0.getOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TimeStamp timeStamp0 = TimeStamp.getCurrentTime();
      byte[] byteArray0 = new byte[6];
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress((InetAddress) null, 1);
      DatagramPacket datagramPacket0 = new DatagramPacket(byteArray0, (byte)0, mockInetSocketAddress0);
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      doReturn(datagramPacket0).when(ntpV3Packet0).getDatagramPacket();
      doReturn(timeStamp0).when(ntpV3Packet0).getOriginateTimeStamp();
      doReturn(timeStamp0).when(ntpV3Packet0).getReceiveTimeStamp();
      doReturn(timeStamp0).when(ntpV3Packet0).getTransmitTimeStamp();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, 3146L);
      timeInfo0.getAddress();
      assertEquals(696204639087L, (long)timeInfo0.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      doReturn((TimeStamp) null).when(ntpV3Packet0).getOriginateTimeStamp();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, 0L, false);
      // Undeclared exception!
      try { 
        timeInfo0.computeDetails();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ntp.TimeInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      doReturn((TimeStamp) null).when(ntpV3Packet0).getOriginateTimeStamp();
      TimeInfo timeInfo0 = null;
      try {
        timeInfo0 = new TimeInfo(ntpV3Packet0, 255L, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ntp.TimeInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TimeInfo timeInfo0 = null;
      try {
        timeInfo0 = new TimeInfo((NtpV3Packet) null, (-1802L), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // message cannot be null
         //
         verifyException("org.apache.commons.net.ntp.TimeInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      doReturn((TimeStamp) null).when(ntpV3Packet0).getOriginateTimeStamp();
      TimeInfo timeInfo0 = null;
      try {
        timeInfo0 = new TimeInfo(ntpV3Packet0, 531L, (List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ntp.TimeInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      doReturn((TimeStamp) null).when(ntpV3Packet0).getOriginateTimeStamp();
      TimeInfo timeInfo0 = null;
      try {
        timeInfo0 = new TimeInfo(ntpV3Packet0, 1383L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ntp.TimeInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TimeInfo timeInfo0 = null;
      try {
        timeInfo0 = new TimeInfo((NtpV3Packet) null, 0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // message cannot be null
         //
         verifyException("org.apache.commons.net.ntp.TimeInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TimeStamp timeStamp0 = TimeStamp.getCurrentTime();
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      doReturn(timeStamp0, timeStamp0).when(ntpV3Packet0).getOriginateTimeStamp();
      doReturn(timeStamp0, timeStamp0).when(ntpV3Packet0).getReceiveTimeStamp();
      doReturn(timeStamp0, timeStamp0).when(ntpV3Packet0).getTransmitTimeStamp();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, (-9L));
      List<String> list0 = timeInfo0.getComments();
      assertNotNull(list0);
      
      TimeInfo timeInfo1 = new TimeInfo(ntpV3Packet0, (-9L), list0, false);
      timeInfo1.computeDetails();
      assertEquals(4, list0.size());
      assertEquals(696204640664L, (long)timeInfo0.getOffset());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TimeStamp timeStamp0 = new TimeStamp("");
      TimeStamp timeStamp1 = TimeStamp.getCurrentTime();
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      doReturn(timeStamp0, timeStamp0).when(ntpV3Packet0).getOriginateTimeStamp();
      doReturn(timeStamp0, timeStamp0).when(ntpV3Packet0).getReceiveTimeStamp();
      doReturn(timeStamp0, timeStamp1).when(ntpV3Packet0).getTransmitTimeStamp();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, 984L);
      List<String> list0 = timeInfo0.getComments();
      assertNotNull(list0);
      
      TimeInfo timeInfo1 = new TimeInfo(ntpV3Packet0, 0L, list0, false);
      timeInfo1.computeDetails();
      assertEquals(2, list0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Impl0, 1L, false);
      timeInfo0.computeDetails();
      assertEquals(1L, timeInfo0.getReturnTime());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      doReturn((TimeStamp) null).when(ntpV3Packet0).getOriginateTimeStamp();
      TimeInfo timeInfo0 = null;
      try {
        timeInfo0 = new TimeInfo(ntpV3Packet0, 0L, (List<String>) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ntp.TimeInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TimeInfo timeInfo0 = null;
      try {
        timeInfo0 = new TimeInfo((NtpV3Packet) null, (-2135L), (List<String>) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // message cannot be null
         //
         verifyException("org.apache.commons.net.ntp.TimeInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TimeStamp timeStamp0 = TimeStamp.getCurrentTime();
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      doReturn((DatagramPacket) null).when(ntpV3Packet0).getDatagramPacket();
      doReturn(timeStamp0).when(ntpV3Packet0).getOriginateTimeStamp();
      doReturn(timeStamp0).when(ntpV3Packet0).getReceiveTimeStamp();
      doReturn(timeStamp0).when(ntpV3Packet0).getTransmitTimeStamp();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, 3146L);
      timeInfo0.getAddress();
      assertEquals(696204639087L, (long)timeInfo0.getOffset());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Impl0, (-544L), true);
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      TimeInfo timeInfo1 = new TimeInfo(ntpV3Packet0, (-544L), false);
      boolean boolean0 = timeInfo0.equals(timeInfo1);
      assertEquals((-544L), timeInfo1.getReturnTime());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, 255L, false);
      TimeInfo timeInfo1 = new TimeInfo(ntpV3Packet0, (-2791L), (List<String>) null, false);
      boolean boolean0 = timeInfo1.equals(timeInfo0);
      assertFalse(boolean0);
      assertEquals((-2791L), timeInfo1.getReturnTime());
      assertFalse(timeInfo0.equals((Object)timeInfo1));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Impl0, (-544L), true);
      TimeInfo timeInfo1 = new TimeInfo(ntpV3Impl0, (-544L), false);
      boolean boolean0 = timeInfo0.equals(timeInfo1);
      assertEquals((-544L), timeInfo1.getReturnTime());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, 255L, false);
      boolean boolean0 = timeInfo0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(255L, timeInfo0.getReturnTime());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Impl0, 1L, false);
      boolean boolean0 = timeInfo0.equals(timeInfo0);
      assertTrue(boolean0);
      assertEquals(1L, timeInfo0.getReturnTime());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TimeStamp timeStamp0 = TimeStamp.getCurrentTime();
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Impl0, (-1458L));
      boolean boolean0 = timeInfo0.equals(timeStamp0);
      assertFalse(boolean0);
      assertEquals((-1458L), timeInfo0.getReturnTime());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TimeStamp timeStamp0 = TimeStamp.getNtpTime((-1259L));
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      doReturn(timeStamp0).when(ntpV3Packet0).getOriginateTimeStamp();
      doReturn(timeStamp0).when(ntpV3Packet0).getReceiveTimeStamp();
      doReturn(timeStamp0).when(ntpV3Packet0).getTransmitTimeStamp();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, 255L, false);
      timeInfo0.computeDetails();
      assertEquals((-757L), (long)timeInfo0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TimeStamp timeStamp0 = new TimeStamp("");
      TimeStamp timeStamp1 = TimeStamp.getCurrentTime();
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      doReturn(timeStamp0, timeStamp0, timeStamp1).when(ntpV3Packet0).getOriginateTimeStamp();
      doReturn(timeStamp0, timeStamp0, timeStamp0).when(ntpV3Packet0).getReceiveTimeStamp();
      doReturn(timeStamp0, timeStamp1, timeStamp1).when(ntpV3Packet0).getTransmitTimeStamp();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, (-9L));
      List<String> list0 = timeInfo0.getComments();
      assertNotNull(list0);
      
      TimeInfo timeInfo1 = new TimeInfo(ntpV3Packet0, (-9L), list0);
      TimeInfo timeInfo2 = new TimeInfo(ntpV3Packet0, (-9L), list0, false);
      timeInfo2.computeDetails();
      assertEquals(4, list0.size());
      assertEquals(1392409281329L, (long)timeInfo2.getOffset());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TimeStamp timeStamp0 = new TimeStamp("");
      TimeStamp timeStamp1 = TimeStamp.getCurrentTime();
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      doReturn(timeStamp0, timeStamp0).when(ntpV3Packet0).getOriginateTimeStamp();
      doReturn(timeStamp0, timeStamp0).when(ntpV3Packet0).getReceiveTimeStamp();
      doReturn(timeStamp0, timeStamp1).when(ntpV3Packet0).getTransmitTimeStamp();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, 984L);
      List<String> list0 = timeInfo0.getComments();
      TimeInfo timeInfo1 = new TimeInfo(ntpV3Packet0, 984L, list0);
      Long long0 = timeInfo1.getOffset();
      assertEquals(2, list0.size());
      assertNotNull(long0);
      assertEquals(1392409280336L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TimeStamp timeStamp0 = TimeStamp.getCurrentTime();
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      doReturn(timeStamp0).when(ntpV3Packet0).getOriginateTimeStamp();
      doReturn(timeStamp0).when(ntpV3Packet0).getReceiveTimeStamp();
      doReturn(timeStamp0).when(ntpV3Packet0).getTransmitTimeStamp();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, 3146L);
      Long long0 = timeInfo0.getDelay();
      assertNotNull(long0);
      assertEquals((-1392409278174L), (long)long0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Impl0, (-544L), true);
      timeInfo0.computeDetails();
      assertEquals((-544L), timeInfo0.getReturnTime());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Impl0, (-544L), false);
      timeInfo0.addComment("");
      assertEquals((-544L), timeInfo0.getReturnTime());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Impl0, (-544L), true);
      timeInfo0.addComment("Warning: zero rcvNtpTime or xmitNtpTime");
      assertEquals((-544L), timeInfo0.getReturnTime());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TimeInfo timeInfo0 = null;
      try {
        timeInfo0 = new TimeInfo((NtpV3Packet) null, 1L, (List<String>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // message cannot be null
         //
         verifyException("org.apache.commons.net.ntp.TimeInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Impl0, (-544L), true);
      timeInfo0.getDelay();
      assertEquals((-544L), timeInfo0.getReturnTime());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, (-1833L), false);
      timeInfo0.getComments();
      assertEquals((-1833L), timeInfo0.getReturnTime());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      NtpV3Packet ntpV3Packet0 = mock(NtpV3Packet.class, new ViolatedAssumptionAnswer());
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Packet0, (-1833L), false);
      timeInfo0.hashCode();
      assertEquals((-1833L), timeInfo0.getReturnTime());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Impl0, (-544L), true);
      Long long0 = timeInfo0.getOffset();
      assertNull(long0);
      assertEquals((-544L), timeInfo0.getReturnTime());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Impl0, (-544L), true);
      timeInfo0.getMessage();
      assertEquals((-544L), timeInfo0.getReturnTime());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeInfo timeInfo0 = new TimeInfo(ntpV3Impl0, (-544L), true);
      long long0 = timeInfo0.getReturnTime();
      assertEquals((-544L), long0);
  }
}
