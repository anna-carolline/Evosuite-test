/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 22:39:13 GMT 2023
 */

package org.apache.commons.net.nntp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Iterator;
import org.apache.commons.net.nntp.Article;
import org.apache.commons.net.nntp.ArticleIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArticleIterator_ESTest extends ArticleIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Iterator<String> iterator0 = (Iterator<String>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      Iterable<String> iterable0 = (Iterable<String>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(iterable0).iterator();
      ArticleIterator articleIterator0 = new ArticleIterator(iterable0);
      articleIterator0.remove();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Iterator<String> iterator0 = (Iterator<String>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn("").when(iterator0).next();
      Iterable<String> iterable0 = (Iterable<String>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(iterable0).iterator();
      ArticleIterator articleIterator0 = new ArticleIterator(iterable0);
      Article article0 = articleIterator0.next();
      assertEquals("", article0.getSubject());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Iterator<String> iterator0 = (Iterator<String>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      Iterable<String> iterable0 = (Iterable<String>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(iterable0).iterator();
      ArticleIterator articleIterator0 = new ArticleIterator(iterable0);
      Iterator<Article> iterator1 = articleIterator0.iterator();
      assertSame(articleIterator0, iterator1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Iterator<String> iterator0 = (Iterator<String>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(iterator0).hasNext();
      Iterable<String> iterable0 = (Iterable<String>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(iterable0).iterator();
      ArticleIterator articleIterator0 = new ArticleIterator(iterable0);
      boolean boolean0 = articleIterator0.hasNext();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Iterator<String> iterator0 = (Iterator<String>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      Iterable<String> iterable0 = (Iterable<String>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(iterable0).iterator();
      ArticleIterator articleIterator0 = new ArticleIterator(iterable0);
      boolean boolean0 = articleIterator0.hasNext();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Iterable<String> iterable0 = (Iterable<String>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn((Iterator) null).when(iterable0).iterator();
      ArticleIterator articleIterator0 = new ArticleIterator(iterable0);
      // Undeclared exception!
      try { 
        articleIterator0.hasNext();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.ArticleIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ArticleIterator articleIterator0 = null;
      try {
        articleIterator0 = new ArticleIterator((Iterable<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.ArticleIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Iterator<String> iterator0 = (Iterator<String>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(iterator0).next();
      Iterable<String> iterable0 = (Iterable<String>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(iterable0).iterator();
      ArticleIterator articleIterator0 = new ArticleIterator(iterable0);
      // Undeclared exception!
      try { 
        articleIterator0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.NNTPClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Iterable<String> iterable0 = (Iterable<String>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn((Iterator) null).when(iterable0).iterator();
      ArticleIterator articleIterator0 = new ArticleIterator(iterable0);
      // Undeclared exception!
      try { 
        articleIterator0.remove();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.ArticleIterator", e);
      }
  }
}
