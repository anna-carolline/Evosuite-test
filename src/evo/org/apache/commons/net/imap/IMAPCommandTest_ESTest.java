/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 21:53:04 GMT 2023
 */

package org.apache.commons.net.imap;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.net.imap.IMAPCommand;
import org.apache.commons.net.imap.IMAPCommandTest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.opentest4j.AssertionFailedError;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IMAPCommandTest_ESTest extends IMAPCommandTest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IMAPCommandTest iMAPCommandTest0 = new IMAPCommandTest();
      IMAPCommand iMAPCommand0 = IMAPCommand.CHECK;
      iMAPCommandTest0.getCommand("CHECK", iMAPCommand0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IMAPCommandTest iMAPCommandTest0 = new IMAPCommandTest();
      // Undeclared exception!
      try { 
        iMAPCommandTest0.getCommand("FETCH", (IMAPCommand) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAPCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IMAPCommandTest iMAPCommandTest0 = new IMAPCommandTest();
      IMAPCommand iMAPCommand0 = IMAPCommand.EXAMINE;
      // Undeclared exception!
      try { 
        iMAPCommandTest0.getCommand("F`d3d-_", iMAPCommand0);
        fail("Expecting exception: AssertionFailedError");
      
      } catch(AssertionFailedError e) {
         //
         // expected: <F`d3d-_> but was: <EXAMINE>
         //
         verifyException("org.junit.jupiter.api.AssertionFailureBuilder", e);
      }
  }
}
