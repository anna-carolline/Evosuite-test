/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 23:41:50 GMT 2023
 */

package org.apache.commons.net.bsd;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.Proxy;
import java.net.Socket;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.net.SocketFactory;
import org.apache.commons.net.bsd.RCommandClient;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RCommandClient_ESTest extends RCommandClient_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          RCommandClient rCommandClient0 = new RCommandClient();
          // Undeclared exception!
          try { 
            rCommandClient0.connect("", 1, (InetAddress) null, 512);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"127.0.0.1:1\" \"connect,resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1051)
             // java.net.Socket.connect(Socket.java:584)
             // org.apache.commons.net.SocketClient._connect(SocketClient.java:136)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:289)
             // org.apache.commons.net.bsd.RCommandClient.connect(RCommandClient.java:213)
             // sun.reflect.GeneratedMethodAccessor95.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          RCommandClient rCommandClient0 = new RCommandClient();
          // Undeclared exception!
          try { 
            rCommandClient0.connect((InetAddress) null, 1023, (InetAddress) null, 1023);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"192.168.1.42:1023\" \"connect,resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1051)
             // java.net.Socket.connect(Socket.java:584)
             // org.apache.commons.net.SocketClient._connect(SocketClient.java:136)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:242)
             // org.apache.commons.net.bsd.RCommandClient.connect(RCommandClient.java:154)
             // sun.reflect.GeneratedMethodAccessor94.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          RCommandClient rCommandClient0 = new RCommandClient();
          // Undeclared exception!
          try { 
            rCommandClient0.connect((InetAddress) null, 512, (InetAddress) null, 512);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"192.168.1.42:512\" \"connect,resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1051)
             // java.net.Socket.connect(Socket.java:584)
             // org.apache.commons.net.SocketClient._connect(SocketClient.java:136)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:242)
             // org.apache.commons.net.bsd.RCommandClient.connect(RCommandClient.java:154)
             // sun.reflect.GeneratedMethodAccessor94.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      Socket socket0 = mock(Socket.class, new ViolatedAssumptionAnswer());
      doReturn((InputStream) null).when(socket0).getInputStream();
      doReturn((OutputStream) null).when(socket0).getOutputStream();
      SocketFactory socketFactory0 = mock(SocketFactory.class, new ViolatedAssumptionAnswer());
      doReturn(socket0).when(socketFactory0).createSocket(any(java.net.InetAddress.class) , anyInt() , any(java.net.InetAddress.class) , anyInt());
      rCommandClient0.setSocketFactory(socketFactory0);
      rCommandClient0.connect((InetAddress) null, 1);
      assertEquals(514, rCommandClient0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      Socket socket0 = mock(Socket.class, new ViolatedAssumptionAnswer());
      doReturn((InputStream) null).when(socket0).getInputStream();
      doReturn((OutputStream) null).when(socket0).getOutputStream();
      SocketFactory socketFactory0 = mock(SocketFactory.class, new ViolatedAssumptionAnswer());
      doReturn(socket0).when(socketFactory0).createSocket(any(java.net.InetAddress.class) , anyInt() , any(java.net.InetAddress.class) , anyInt());
      rCommandClient0.setSocketFactory(socketFactory0);
      rCommandClient0.connect("", 1312, (InetAddress) null);
      assertEquals(514, rCommandClient0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      Socket socket0 = mock(Socket.class, new ViolatedAssumptionAnswer());
      doReturn((InputStream) null).when(socket0).getInputStream();
      doReturn((OutputStream) null).when(socket0).getOutputStream();
      SocketFactory socketFactory0 = mock(SocketFactory.class, new ViolatedAssumptionAnswer());
      doReturn(socket0).when(socketFactory0).createSocket(any(java.net.InetAddress.class) , anyInt() , any(java.net.InetAddress.class) , anyInt());
      rCommandClient0.setSocketFactory(socketFactory0);
      rCommandClient0.connect("", 2478);
      assertEquals(514, rCommandClient0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      // Undeclared exception!
      try { 
        rCommandClient0.createErrorStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.SocketClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      rCommandClient0.setProxy((Proxy) null);
      try { 
        rCommandClient0.connect((InetAddress) null, 514, (InetAddress) null, 514);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@b0e927d8
         //
         verifyException("org.evosuite.runtime.vnet.VirtualNetwork", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      rCommandClient0.setProxy((Proxy) null);
      try { 
        rCommandClient0.connect("", 1, (InetAddress) null, 1023);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@76ce285c
         //
         verifyException("org.evosuite.runtime.vnet.VirtualNetwork", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      // Undeclared exception!
      try { 
        rCommandClient0.connect("O\"HDhETX", (-1352), (InetAddress) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-1352
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      // Undeclared exception!
      try { 
        rCommandClient0.connect("K#th", (-3191));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-3191
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      Socket socket0 = mock(Socket.class, new ViolatedAssumptionAnswer());
      doReturn((InputStream) null).when(socket0).getInputStream();
      doReturn((OutputStream) null).when(socket0).getOutputStream();
      SocketFactory socketFactory0 = mock(SocketFactory.class, new ViolatedAssumptionAnswer());
      doReturn(socket0).when(socketFactory0).createSocket(any(java.net.InetAddress.class) , anyInt() , any(java.net.InetAddress.class) , anyInt());
      rCommandClient0.setSocketFactory(socketFactory0);
      rCommandClient0.connect((InetAddress) null, 0, (InetAddress) null);
      assertEquals(514, rCommandClient0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      // Undeclared exception!
      try { 
        rCommandClient0.connect((InetAddress) null, 0, (InetAddress) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.Socket", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      // Undeclared exception!
      try { 
        rCommandClient0.rcommand("", "", "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.SocketClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      try { 
        rCommandClient0.connect("All ports in use.", 262, (InetAddress) null, 60000);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid port number 60000
         //
         verifyException("org.apache.commons.net.bsd.RCommandClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      try { 
        rCommandClient0.connect("g{p?#c&u", (-36), (InetAddress) null, (-36));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid port number -36
         //
         verifyException("org.apache.commons.net.bsd.RCommandClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      try { 
        rCommandClient0.connect((InetAddress) null, 60000, (InetAddress) null, 60000);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid port number 60000
         //
         verifyException("org.apache.commons.net.bsd.RCommandClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      try { 
        rCommandClient0.connect((InetAddress) null, (-2197), (InetAddress) null, 514);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-2197
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      try { 
        rCommandClient0.connect((InetAddress) null, 512, (InetAddress) null, 265);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid port number 265
         //
         verifyException("org.apache.commons.net.bsd.RCommandClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      SocketFactory socketFactory0 = mock(SocketFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Socket) null).when(socketFactory0).createSocket(any(java.net.InetAddress.class) , anyInt() , any(java.net.InetAddress.class) , anyInt());
      rCommandClient0.setSocketFactory(socketFactory0);
      // Undeclared exception!
      try { 
        rCommandClient0.connect("5J)[@jA", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.SocketClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      // Undeclared exception!
      try { 
        rCommandClient0.rcommand("", "PYRef&kgZ`K", "kmmu[Hd3");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.bsd.RExecClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      // Undeclared exception!
      try { 
        rCommandClient0.connect((InetAddress) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.Socket", e);
      }
  }
}
