/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 22:03:42 GMT 2023
 */

package org.apache.commons.net.ntp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.net.DatagramSocket;
import java.net.InetAddress;
import org.apache.commons.net.DatagramSocketFactory;
import org.apache.commons.net.ntp.NTPUDPClient;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NTPUDPClient_ESTest extends NTPUDPClient_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      assertEquals(3, nTPUDPClient0.getVersion());
      
      nTPUDPClient0.setVersion(0);
      int int0 = nTPUDPClient0.getVersion();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      nTPUDPClient0.setVersion((-2593));
      int int0 = nTPUDPClient0.getVersion();
      assertEquals((-2593), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      // Undeclared exception!
      try { 
        nTPUDPClient0.getTime((InetAddress) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null buffer || null address
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoDatagramSocketImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      DatagramSocket datagramSocket0 = mock(DatagramSocket.class, new ViolatedAssumptionAnswer());
      DatagramSocketFactory datagramSocketFactory0 = mock(DatagramSocketFactory.class, new ViolatedAssumptionAnswer());
      doReturn(datagramSocket0).when(datagramSocketFactory0).createDatagramSocket();
      nTPUDPClient0.setDatagramSocketFactory(datagramSocketFactory0);
      try { 
        nTPUDPClient0.getTime((InetAddress) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Originate time does not match the request
         //
         verifyException("org.apache.commons.net.ntp.NTPUDPClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      DatagramSocket datagramSocket0 = mock(DatagramSocket.class, new ViolatedAssumptionAnswer());
      DatagramSocketFactory datagramSocketFactory0 = mock(DatagramSocketFactory.class, new ViolatedAssumptionAnswer());
      doReturn(datagramSocket0).when(datagramSocketFactory0).createDatagramSocket();
      nTPUDPClient0.setDatagramSocketFactory(datagramSocketFactory0);
      try { 
        nTPUDPClient0.getTime((InetAddress) null, 123);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Originate time does not match the request
         //
         verifyException("org.apache.commons.net.ntp.NTPUDPClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      nTPUDPClient0.open(0);
      InetAddress inetAddress0 = nTPUDPClient0.getLocalAddress();
      // Undeclared exception!
      try { 
        nTPUDPClient0.getTime(inetAddress0, (-1573));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Port out of range:-1573
         //
         verifyException("java.net.DatagramPacket", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      // Undeclared exception!
      try { 
        nTPUDPClient0.getTime((InetAddress) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null buffer || null address
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoDatagramSocketImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      int int0 = nTPUDPClient0.getVersion();
      assertEquals(3, int0);
  }
}
