/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 22:56:52 GMT 2023
 */

package org.apache.commons.net.nntp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintStream;
import org.apache.commons.net.nntp.Article;
import org.apache.commons.net.nntp.Threadable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Article_ESTest extends Article_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PrintStream printStream0 = null;
      int int0 = (-3504);
      Article article0 = new Article();
      String string0 = "(no subject)";
      // Undeclared exception!
      try { 
        article0.simplifiedSubject();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.Article", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Article article0 = new Article();
      Threadable threadable0 = article0.makeDummy();
      article0.subjectIsReply();
      Article article1 = new Article();
      article0.next = article1;
      PrintStream printStream0 = mock(PrintStream.class, new ViolatedAssumptionAnswer());
      Article.printThread(article0, 1055, printStream0);
      article0.next.kid = article1;
      article0.next.setArticleNumber(0L);
      article0.next.kid.kid = article1;
      article0.addReference(")Hz2h2-'{-D$MklGw");
      article0.addReference(")Hz2h2-'{-D$MklGw");
      article0.addHeaderField(")Hz2h2-'{-D$MklGw", "");
      article0.setNext(threadable0);
      article1.getSubject();
      PrintStream printStream1 = mock(PrintStream.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      Article.printThread(article1, printStream1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Article article0 = new Article();
      // Undeclared exception!
      try { 
        Article.printThread(article0, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.Article", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Article article0 = new Article();
      article0.toString();
      Article.printThread(article0);
      article0.getArticleId();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Article article0 = new Article();
      article0.setArticleNumber(635L);
      article0.setArticleNumber(1L);
      article0.getArticleId();
      article0.getSubject();
      Threadable threadable0 = article0.makeDummy();
      article0.setNext(threadable0);
      article0.setArticleId("");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Article article0 = new Article();
      // Undeclared exception!
      try { 
        article0.simplifiedSubject();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.Article", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Article article0 = new Article();
      PrintStream printStream0 = mock(PrintStream.class, new ViolatedAssumptionAnswer());
      Article.printThread(article0, 0, printStream0);
      article0.setArticleNumber((-3338L));
      // Undeclared exception!
      try { 
        article0.simplifiedSubject();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.Article", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = article0.kid;
      // Undeclared exception!
      try { 
        Article.printThread(article0, (-1650), (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.Article", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Article article0 = new Article();
      Article.printThread(article0);
      PrintStream printStream0 = mock(PrintStream.class, new ViolatedAssumptionAnswer());
      Article.printThread(article0, 40, printStream0);
      Threadable threadable0 = article0.makeDummy();
      article0.messageThreadId();
      article0.setNext(threadable0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = article0.next;
      article0.setChild((Threadable) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Article article0 = new Article();
      article0.setDate("");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Article article0 = new Article();
      article0.messageThreadReferences();
      article0.messageThreadReferences();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = article0.next;
      int int0 = 114;
      PrintStream printStream0 = null;
      Article.printThread(article0);
      // Undeclared exception!
      try { 
        Article.printThread((Article) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.Article", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Article article0 = new Article();
      article0.getReferences();
      article0.isDummy();
      article0.setArticleId("\t");
      article0.messageThreadId();
      article0.setFrom("\t");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Article article0 = new Article();
      article0.setFrom("\"O$z5]Tb.:TB^O!GU_");
      article0.setDate((String) null);
      PrintStream printStream0 = mock(PrintStream.class, new ViolatedAssumptionAnswer());
      Article.printThread(article0, printStream0);
      article0.toString();
      article0.isDummy();
      article0.toString();
      article0.getReferences();
      article0.getReferences();
      article0.setDate("\"\"cS&CYR~Y#r");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Article article0 = new Article();
      Threadable threadable0 = article0.makeDummy();
      article0.subjectIsReply();
      Article article1 = new Article();
      article0.next = article1;
      PrintStream printStream0 = mock(PrintStream.class, new ViolatedAssumptionAnswer());
      Article.printThread(article0, 1055, printStream0);
      article0.next.kid = article1;
      article0.next.setArticleNumber(0L);
      article0.next.kid.kid = article1;
      article0.addReference(")Hz2h2-'{-D$MklGw");
      article0.addReference(")Hz2h2-'{-D$MklGw");
      article0.addHeaderField(")Hz2h2-'{-D$MklGw", "");
      article0.setNext(threadable0);
      article1.getSubject();
      PrintStream printStream1 = mock(PrintStream.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      Article.printThread(article1, printStream1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Article article0 = new Article();
      article0.getArticleNumber();
      article0.addHeaderField("phnXaOxs", "");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Article article0 = new Article();
      article0.setArticleNumber((-1626));
      article0.getArticleNumber();
      article0.setArticleId("");
      article0.addReference(",oYdN");
      Article article1 = new Article();
      PrintStream printStream0 = mock(PrintStream.class, new ViolatedAssumptionAnswer());
      Article.printThread(article1, printStream0);
      // Undeclared exception!
      try { 
        Article.printThread(article0, (-1), (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.Article", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = article0.next;
      PrintStream printStream0 = mock(PrintStream.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        Article.printThread((Article) null, printStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.Article", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Article article0 = new Article();
      Threadable threadable0 = article0.makeDummy();
      article0.setChild(threadable0);
      PrintStream printStream0 = mock(PrintStream.class, new ViolatedAssumptionAnswer());
      Article.printThread(article0, printStream0);
      article0.messageThreadReferences();
      article0.messageThreadReferences();
      article0.makeDummy();
      article0.subjectIsReply();
      article0.setArticleNumber(2162);
      Article.printThread(article0);
      article0.getArticleId();
      article0.getArticleId();
      article0.setFrom("Xg");
      article0.getSubject();
      article0.addHeaderField("Xg", "");
      article0.getReferences();
      article0.addReference("");
      article0.setChild(threadable0);
      article0.getArticleId();
      PrintStream printStream1 = mock(PrintStream.class, new ViolatedAssumptionAnswer());
      Article.printThread(article0, 2013, printStream1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Article article0 = new Article();
      article0.getArticleNumberLong();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Article article0 = new Article();
      article0.addReference((String) null);
      article0.setSubject((String) null);
      Article.printThread(article0);
      article0.isDummy();
      article0.addReference((String) null);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PrintStream printStream0 = mock(PrintStream.class, new ViolatedAssumptionAnswer());
      int int0 = (-3504);
      Article article0 = new Article();
      article0.messageThreadReferences();
      // Undeclared exception!
      try { 
        Article.printThread(article0, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.Article", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Article article0 = null;
      int int0 = 0;
      // Undeclared exception!
      try { 
        Article.printThread((Article) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.Article", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Article article0 = new Article();
      Article.printThread(article0);
      article0.getReferences();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Article article0 = new Article();
      article0.makeDummy();
      article0.getArticleNumberLong();
      // Undeclared exception!
      try { 
        article0.simplifiedSubject();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.Article", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Article article0 = new Article();
      article0.isDummy();
      Article.printThread(article0, 40);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PrintStream printStream0 = mock(PrintStream.class, new ViolatedAssumptionAnswer());
      Article article0 = new Article();
      article0.getArticleNumber();
      article0.messageThreadId();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Article article0 = new Article();
      article0.addReference("org.apache.commons.net.nntp.Article");
      Article.printThread(article0);
      article0.getReferences();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Article article0 = new Article();
      article0.toString();
      Article.printThread(article0);
      article0.isDummy();
      article0.getDate();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Article article0 = new Article();
      article0.addReference("org.apache.commons.net.nntp.Article");
      article0.toString();
      Article.printThread(article0);
      article0.getReferences();
      article0.getSubject();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Article article0 = new Article();
      article0.toString();
      Article.printThread(article0);
      article0.getFrom();
  }
}
