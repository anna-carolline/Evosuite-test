/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 19 22:17:13 GMT 2023
 */

package org.apache.commons.net.nntp;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.net.nntp.SimpleNNTPHeader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNNTPHeader_ESTest extends SimpleNNTPHeader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader("MrU", (String) null);
      String string0 = simpleNNTPHeader0.getSubject();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader("", "");
      String string0 = simpleNNTPHeader0.getSubject();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader("{", "{");
      simpleNNTPHeader0.addNewsgroup("{");
      simpleNNTPHeader0.getNewsgroups();
      assertEquals("{", simpleNNTPHeader0.getNewsgroups());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader((String) null, (String) null);
      String string0 = simpleNNTPHeader0.getFromAddress();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader("", "");
      String string0 = simpleNNTPHeader0.getFromAddress();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader("{", "{");
      String string0 = simpleNNTPHeader0.toString();
      assertEquals("From: {\nNewsgroups: \nSubject: {\n\n", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader("{", "{");
      simpleNNTPHeader0.addNewsgroup("{");
      simpleNNTPHeader0.addNewsgroup("{");
      assertEquals("{,{", simpleNNTPHeader0.getNewsgroups());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader("{", "{");
      simpleNNTPHeader0.addHeaderField("{", "From: {\nNewsgroups: {\nSubject: {\n\n");
      String string0 = simpleNNTPHeader0.toString();
      assertEquals("From: {\nNewsgroups: \nSubject: {\n{: From: {\nNewsgroups: {\nSubject: {\n\n\n\n", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader("{", "{");
      String string0 = simpleNNTPHeader0.getSubject();
      assertEquals("{", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader("{", "{");
      String string0 = simpleNNTPHeader0.getFromAddress();
      assertEquals("{", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader("{", "{");
      String string0 = simpleNNTPHeader0.getNewsgroups();
      assertEquals("", string0);
  }
}
